{"version":3,"sources":["../../src/pages/informacion-establecimiento/informacion-establecimiento.module.ts","../../src/providers/servicio-buscar/servicio-buscar.ts","../../node_modules/@ionic-native/google-maps/index.js","../../src/pages/informacion-establecimiento/informacion-establecimiento.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAAyC;AACO;AAC+B;AACxB;AACkC;AAczF,IAAa,oCAAoC;IAAjD;IAAmD,CAAC;IAAD,2CAAC;AAAD,CAAC;AAAvC,oCAAoC;IAZhD,uEAAQ,CAAC;QACR,YAAY,EAAE;YACZ,oGAA8B;SAC/B;QACD,OAAO,EAAE;YACP,sEAAe,CAAC,QAAQ,CAAC,oGAA8B,CAAC;SACzD;QACD,SAAS,EAAE;YACT,6EAAU;YACV,0GAAsB;SACvB;KACF,CAAC;GACW,oCAAoC,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;;AClBN;AACuC;AACnD;AACyD;AAExF;;;;;EAKE;AAEF,IAAa,sBAAsB;IAOjC,gCAAmB,IAAU,EAAS,kBAA8C;QAAjE,SAAI,GAAJ,IAAI,CAAM;QAAS,uBAAkB,GAAlB,kBAAkB,CAA4B;QAClF,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,kBAAkB,CAAC,cAAc,EAAE,CAAC;QAC5D,IAAI,CAAC,kBAAkB,GAAG,qCAAqC,CAAC;IAClE,CAAC;IAED,iEAAgC,GAAhC,UAAiC,QAAgB;QAAjD,iBAQC;QAPC,MAAM,CAAC,IAAI,OAAO,CAAC,iBAAO;YACxB,IAAI,MAAM,GAAG,EAAE,KAAK,EAAE,QAAQ,EAAE,OAAO,EAAE,EAAE,EAAE,QAAQ,EAAE,EAAE,EAAE,CAAC;YAC5D,KAAI,CAAC,IAAI,CAAC,GAAG,CAAC,KAAI,CAAC,WAAW,GAAG,KAAI,CAAC,kBAAkB,EAAE,EAAE,MAAM,EAAE,MAAM,EAAC,CAAC,CAAC,GAAG,CAAC,aAAG,IAAI,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC,SAAS,CAAC,cAAI;gBAChH,KAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;gBAC7B,OAAO,CAAC,KAAI,CAAC,gBAAgB,CAAC,CAAC;YACjC,CAAC,EAAE,eAAK,IAAI,cAAO,CAAC,IAAI,CAAC,EAAb,CAAa,CAAC,CAAC;QAC7B,CAAC,CAAC;IACJ,CAAC;IAED,wDAAuB,GAAvB,UAAwB,EAAU;QAAlC,iBAQC;QAPC,MAAM,CAAC,IAAI,OAAO,CAAC,iBAAO;YACxB,IAAI,MAAM,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;YACxB,KAAI,CAAC,IAAI,CAAC,GAAG,CAAC,KAAI,CAAC,WAAW,GAAG,KAAI,CAAC,kBAAkB,EAAE,EAAE,MAAM,EAAE,MAAM,EAAC,CAAC,CAAC,GAAG,CAAC,aAAG,IAAI,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC,SAAS,CAAC,cAAI;gBAChH,KAAI,CAAC,eAAe,GAAG,IAAI,CAAC;gBAC5B,OAAO,CAAC,KAAI,CAAC,eAAe,CAAC,CAAC;YAChC,CAAC,EAAE,eAAK,IAAI,cAAO,CAAC,IAAI,CAAC,EAAb,CAAa,CAAC,CAAC;QAC7B,CAAC,CAAC;IACJ,CAAC;IACH,6BAAC;AAAD,CAAC;AA/BY,sBAAsB;IADlC,yEAAU,EAAE;qCAQc,2DAAI,EAA6B,4GAA0B;GAPzE,sBAAsB,CA+BlC;AA/BkC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACZnC;AAAA;AAAA;AACA;AACA,UAAU,gBAAgB,sCAAsC,iBAAiB,EAAE;AACnF,yBAAyB,uDAAuD;AAChF;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA;AACA;AACA;AACqB;AACkG;AAClG;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACO;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,mDAAmD,QAAQ;AAC3D;AACA;AACA,yBAAyB;AACzB,gBAAgB;AAChB;AACA,8DAA8D,QAAQ;AACtE;AACA;AACA,sBAAsB;AACtB;AACA,uDAAuD;AACvD;AACA;AACA,sBAAsB;AACtB;AACA,yDAAyD,QAAQ;AACjE;AACA;AACA,gBAAgB;AAChB;AACA,oDAAoD,QAAQ;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6FAAyB,aAAa;AACtC;AACA;AACA;AACA;AACA;AACA,6FAAyB,aAAa;AACtC;AACA;AACA;AACA;AACA;AACA,6FAAyB,aAAa;AACtC;AACA;AACA;AACA;AACA;AACA,6FAAyB,aAAa;AACtC;AACA;AACA;AACA;AACA;AACA,6FAAyB,aAAa;AACtC;AACA;AACA;AACA;AACA;AACA,CAAC;AACO;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,oDAAoD,QAAQ;AAC5D;AACA;AACA,yBAAyB;AACzB,gBAAgB;AAChB;AACA,+DAA+D,QAAQ;AACvE;AACA;AACA,sBAAsB;AACtB;AACA,0DAA0D,QAAQ;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6FAAyB,aAAa;AACtC;AACA;AACA;AACA;AACA;AACA,6FAAyB,aAAa;AACtC;AACA;AACA;AACA;AACA;AACA,6FAAyB,aAAa;AACtC;AACA;AACA;AACA;AACA;AACA,CAAC;AACO;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ,WAAW,YAAY;AACvB;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,kDAAkD;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,kBAAkB;AAClB,cAAc;AACd;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,qBAAqB;AAC5C,uBAAuB,IAAI;AAC3B,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,0EAAmB;AAC5B;AACA;AACA,6CAA6C,WAAW;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,CAAC;AACO;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,uBAAuB;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,uBAAuB;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,8CAA8C,QAAQ;AACtD;AACA;AACA;AACA;AACA;AACA,+DAA+D;AAC/D;AACA;AACA,mBAAmB;AACnB,sBAAsB;AACtB,0BAA0B;AAC1B,yBAAyB;AACzB;AACA,8EAA8E;AAC9E;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,uBAAuB;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,uBAAuB;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA,6CAA6C;AAC7C;AACA;AACA;AACA;AACA;AACA,wBAAwB,uBAAuB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2FAAuB,mBAAmB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6FAAyB,aAAa;AACtC;AACA;AACA;AACA;AACA;AACA,6FAAyB,aAAa;AACtC;AACA;AACA;AACA;AACA;AACA,6FAAyB,aAAa;AACtC;AACA;AACA;AACA;AACA;AACA,2FAAuB,mBAAmB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6FAAyB,aAAa;AACtC;AACA;AACA;AACA;AACA;AACA,6FAAyB,aAAa;AACtC;AACA;AACA;AACA;AACA;AACA,0FAAsB,aAAa;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,CAAC;AACO;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,QAAQ;AACjC;AACA,0DAA0D;AAC1D;AACA;AACA,kBAAkB;AAClB,yBAAyB;AACzB;AACA,sDAAsD;AACtD;AACA;AACA,kBAAkB;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,kBAAkB;AAClB,yBAAyB;AACzB,gBAAgB,cAAc;AAC9B;AACA,kDAAkD,QAAQ;AAC1D;AACA;AACA;AACA,kBAAkB;AAClB,yBAAyB;AACzB,gBAAgB,aAAa;AAC7B;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,kBAAkB;AAClB,yBAAyB;AACzB,gBAAgB,cAAc;AAC9B;AACA,qDAAqD,QAAQ;AAC7D;AACA;AACA,kBAAkB;AAClB,yBAAyB;AACzB,gBAAgB,aAAa;AAC7B;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,gBAAgB;AAChB;AACA,qDAAqD,QAAQ;AAC7D;AACA;AACA,qBAAqB;AACrB,gBAAgB;AAChB;AACA,uDAAuD;AACvD;AACA;AACA,gBAAgB;AAChB;AACA,sDAAsD,QAAQ;AAC9D;AACA;AACA,uBAAuB;AACvB,gBAAgB;AAChB;AACA,2DAA2D,QAAQ;AACnE;AACA;AACA;AACA,oDAAoD;AACpD;AACA;AACA;AACA,iDAAiD;AACjD;AACA;AACA,qBAAqB;AACrB,uBAAuB;AACvB,yBAAyB,QAAQ;AACjC,gBAAgB;AAChB;AACA,6EAA6E;AAC7E;AACA;AACA,yBAAyB,QAAQ;AACjC,gBAAgB;AAChB;AACA,wDAAwD,QAAQ;AAChE;AACA;AACA,uBAAuB;AACvB,yBAAyB,QAAQ;AACjC;AACA,kEAAkE;AAClE;AACA;AACA,qBAAqB;AACrB,yBAAyB,QAAQ;AACjC;AACA,oEAAoE;AACpE;AACA;AACA,qBAAqB;AACrB,uBAAuB;AACvB,yBAAyB,QAAQ;AACjC;AACA,0EAA0E;AAC1E;AACA,6FAAyB,aAAa;AACtC;AACA;AACA;AACA;AACA;AACA,6FAAyB,aAAa;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6FAAyB,aAAa;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6FAAyB,aAAa;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6FAAyB,aAAa;AACtC;AACA;AACA;AACA;AACA;AACA,6FAAyB,aAAa;AACtC;AACA;AACA;AACA;AACA;AACA,6FAAyB,aAAa;AACtC;AACA;AACA;AACA;AACA;AACA,6FAAyB,aAAa;AACtC;AACA;AACA;AACA;AACA;AACA,6FAAyB,aAAa;AACtC;AACA;AACA;AACA;AACA;AACA,6FAAyB,aAAa;AACtC;AACA;AACA;AACA;AACA;AACA,6FAAyB,aAAa;AACtC;AACA;AACA;AACA;AACA;AACA,6FAAyB,aAAa;AACtC;AACA;AACA;AACA;AACA;AACA,6FAAyB,aAAa;AACtC;AACA;AACA;AACA;AACA;AACA,6FAAyB,aAAa;AACtC;AACA;AACA;AACA;AACA;AACA,6FAAyB,aAAa;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,CAAC;AACO;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,0CAA0C,QAAQ;AAClD;AACA;AACA,gBAAgB;AAChB;AACA,2CAA2C,kBAAkB;AAC7D;AACA;AACA,sBAAsB;AACtB;AACA,oDAAoD;AACpD;AACA;AACA,gBAAgB;AAChB;AACA,8CAA8C,QAAQ;AACtD;AACA;AACA,gBAAgB;AAChB;AACA,8CAA8C,QAAQ;AACtD;AACA;AACA,sBAAsB;AACtB;AACA,oDAAoD;AACpD;AACA;AACA,qBAAqB;AACrB;AACA,sDAAsD;AACtD;AACA;AACA,gBAAgB;AAChB;AACA,iDAAiD,QAAQ;AACzD;AACA;AACA,2BAA2B;AAC3B;AACA,8DAA8D;AAC9D;AACA;AACA,gBAAgB;AAChB;AACA,mDAAmD,QAAQ;AAC3D;AACA;AACA,2BAA2B;AAC3B;AACA,8DAA8D;AAC9D;AACA;AACA,gBAAgB;AAChB;AACA,mDAAmD,QAAQ;AAC3D;AACA;AACA,yBAAyB;AACzB;AACA,0DAA0D;AAC1D;AACA;AACA,gBAAgB;AAChB;AACA,iDAAiD,QAAQ;AACzD;AACA;AACA,sBAAsB;AACtB;AACA,oDAAoD;AACpD;AACA;AACA,gBAAgB;AAChB;AACA,8CAA8C,QAAQ;AACtD;AACA;AACA;AACA,2CAA2C;AAC3C;AACA;AACA,gBAAgB;AAChB;AACA,8CAA8C,QAAQ;AACtD;AACA;AACA,uBAAuB;AACvB;AACA,sDAAsD;AACtD;AACA;AACA,gBAAgB;AAChB;AACA,+CAA+C,QAAQ;AACvD;AACA,6FAAyB,aAAa;AACtC;AACA;AACA;AACA;AACA;AACA,6FAAyB,aAAa;AACtC;AACA;AACA;AACA;AACA;AACA,6FAAyB,aAAa;AACtC;AACA;AACA;AACA;AACA;AACA,6FAAyB,aAAa;AACtC;AACA;AACA;AACA;AACA;AACA,6FAAyB,aAAa;AACtC;AACA;AACA;AACA;AACA;AACA,6FAAyB,aAAa;AACtC;AACA;AACA;AACA;AACA;AACA,6FAAyB,aAAa;AACtC;AACA;AACA;AACA;AACA;AACA,6FAAyB,aAAa;AACtC;AACA;AACA;AACA;AACA;AACA,6FAAyB,aAAa;AACtC;AACA;AACA;AACA;AACA;AACA,6FAAyB,aAAa;AACtC;AACA;AACA;AACA;AACA;AACA,6FAAyB,aAAa;AACtC;AACA;AACA;AACA;AACA;AACA,6FAAyB,aAAa;AACtC;AACA;AACA;AACA;AACA;AACA,6FAAyB,aAAa;AACtC;AACA;AACA;AACA;AACA;AACA,6FAAyB,aAAa;AACtC;AACA;AACA;AACA;AACA;AACA,6FAAyB,aAAa;AACtC;AACA;AACA;AACA;AACA;AACA,6FAAyB,aAAa;AACtC;AACA;AACA;AACA;AACA;AACA,6FAAyB,aAAa;AACtC;AACA;AACA;AACA;AACA;AACA,6FAAyB,aAAa;AACtC;AACA;AACA;AACA;AACA;AACA,6FAAyB,aAAa;AACtC;AACA;AACA;AACA;AACA;AACA,CAAC;AACO;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,+EAA+E,sBAAsB,EAAE;AACvG,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,CAAC;AACO;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,gBAAgB;AAC/B,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,CAAC;AACO;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,OAAO;AAC9B,0BAA0B,OAAO;AACjC,gBAAgB;AAChB;AACA,yDAAyD,QAAQ;AACjE;AACA;AACA,oBAAoB,yCAAyC;AAC7D,gBAAgB;AAChB;AACA,2CAA2C,QAAQ;AACnD;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,CAAC;AACO;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB,oBAAoB;AACpB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB,oBAAoB;AACpB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,CAAC;AACO;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,yBAAyB;AACzB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB,wBAAwB;AACxB,uBAAuB;AACvB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,QAAQ;AAC1B,wBAAwB,OAAO;AAC/B,uBAAuB,OAAO;AAC9B,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,yCAAyC;AAC7D,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,yCAAyC;AAC7D,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB,kBAAkB;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,QAAQ;AAC5B,kBAAkB,QAAQ;AAC1B,wBAAwB,OAAO;AAC/B,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,CAAC;AACO;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA;AACA,iDAAiD;AACjD;AACA;AACA,yBAAyB;AACzB;AACA;AACA,yBAAyB;AACzB;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,8CAA8C,QAAQ;AACtD;AACA;AACA,yBAAyB;AACzB;AACA,6DAA6D;AAC7D;AACA;AACA,gBAAgB;AAChB;AACA,mEAAmE,QAAQ;AAC3E;AACA;AACA,gBAAgB;AAChB;AACA,2DAA2D,QAAQ;AACnE;AACA;AACA,gBAAgB;AAChB;AACA,4DAA4D,QAAQ;AACpE;AACA;AACA,gBAAgB;AAChB;AACA,gEAAgE,QAAQ;AACxE;AACA;AACA,gBAAgB;AAChB;AACA,wDAAwD,QAAQ;AAChE;AACA;AACA,gBAAgB;AAChB;AACA,yDAAyD,QAAQ;AACjE;AACA;AACA,gBAAgB;AAChB;AACA,yDAAyD,QAAQ;AACjE;AACA;AACA,gBAAgB;AAChB;AACA,uDAAuD,QAAQ;AAC/D;AACA;AACA,gBAAgB;AAChB;AACA,qDAAqD,QAAQ;AAC7D;AACA;AACA,gBAAgB;AAChB;AACA,wDAAwD,QAAQ;AAChE;AACA;AACA,gBAAgB;AAChB;AACA,qDAAqD,QAAQ;AAC7D;AACA;AACA,sBAAsB;AACtB;AACA,6DAA6D;AAC7D;AACA;AACA,yBAAyB,OAAO;AAChC;AACA,8DAA8D;AAC9D;AACA;AACA,yBAAyB,OAAO;AAChC;AACA,8DAA8D;AAC9D;AACA;AACA,uBAAuB;AACvB;AACA,+DAA+D;AAC/D;AACA;AACA,iBAAiB;AACjB,iBAAiB;AACjB;AACA,iDAAiD;AACjD;AACA;AACA,gBAAgB;AAChB;AACA,wDAAwD,QAAQ;AAChE;AACA;AACA,gBAAgB;AAChB;AACA,4DAA4D,QAAQ;AACpE;AACA;AACA,2BAA2B;AAC3B;AACA,+DAA+D;AAC/D;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,sDAAsD,kBAAkB,EAAE;AAC1E,SAAS;AACT;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,qDAAqD,kBAAkB,EAAE;AACzE,SAAS;AACT;AACA;AACA;AACA,gBAAgB;AAChB;AACA,+DAA+D,QAAQ;AACvE;AACA;AACA,gBAAgB;AAChB;AACA,8DAA8D,QAAQ;AACtE;AACA;AACA,uBAAuB;AACvB;AACA,mEAAmE;AACnE;AACA;AACA,gBAAgB;AAChB;AACA,0DAA0D,QAAQ;AAClE;AACA;AACA,uBAAuB;AACvB;AACA,+DAA+D;AAC/D;AACA;AACA,uBAAuB;AACvB;AACA,gEAAgE;AAChE;AACA;AACA,uBAAuB;AACvB;AACA,gEAAgE;AAChE;AACA;AACA,uBAAuB;AACvB;AACA,oEAAoE;AACpE;AACA;AACA,uBAAuB;AACvB;AACA,yDAAyD;AACzD;AACA;AACA,mBAAmB;AACnB,qBAAqB;AACrB,oBAAoB;AACpB,sBAAsB;AACtB;AACA,0EAA0E;AAC1E;AACA;AACA;AACA;AACA,yDAAyD;AACzD;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,qDAAqD;AACrD;AACA,gBAAgB;AAChB;AACA,iDAAiD,QAAQ;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6FAAyB,aAAa;AACtC;AACA;AACA;AACA;AACA;AACA,6FAAyB,aAAa;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6FAAyB,aAAa;AACtC;AACA;AACA;AACA;AACA;AACA,6FAAyB,aAAa;AACtC;AACA;AACA;AACA;AACA;AACA,6FAAyB,aAAa;AACtC;AACA;AACA;AACA;AACA;AACA,6FAAyB,aAAa;AACtC;AACA;AACA;AACA;AACA;AACA,6FAAyB,aAAa;AACtC;AACA;AACA;AACA;AACA;AACA,6FAAyB,aAAa;AACtC;AACA;AACA;AACA;AACA;AACA,6FAAyB,aAAa;AACtC;AACA;AACA;AACA;AACA;AACA,6FAAyB,aAAa;AACtC;AACA;AACA;AACA;AACA;AACA,6FAAyB,aAAa;AACtC;AACA;AACA;AACA;AACA;AACA,6FAAyB,aAAa;AACtC;AACA;AACA;AACA;AACA;AACA,6FAAyB,aAAa;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6FAAyB,aAAa;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6FAAyB,aAAa;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6FAAyB,aAAa;AACtC;AACA;AACA;AACA;AACA;AACA,6FAAyB,aAAa;AACtC;AACA;AACA;AACA;AACA;AACA,6FAAyB,aAAa;AACtC;AACA;AACA;AACA;AACA;AACA,6FAAyB,aAAa;AACtC;AACA;AACA;AACA;AACA;AACA,6FAAyB,aAAa;AACtC;AACA;AACA;AACA;AACA;AACA,6FAAyB,aAAa;AACtC;AACA;AACA;AACA;AACA;AACA,6FAAyB,aAAa;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6FAAyB,aAAa;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,CAAC;AACO;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,iDAAiD,QAAQ;AACzD;AACA;AACA,gBAAgB;AAChB;AACA,kDAAkD,kBAAkB;AACpE;AACA;AACA,sBAAsB;AACtB;AACA,2DAA2D;AAC3D;AACA;AACA,uBAAuB;AACvB;AACA,6DAA6D;AAC7D;AACA;AACA;AACA,sDAAsD,QAAQ;AAC9D;AACA;AACA,qBAAqB,OAAO;AAC5B;AACA,yDAAyD;AACzD;AACA;AACA;AACA,uBAAuB;AACvB;AACA,6DAA6D;AAC7D;AACA;AACA,gBAAgB;AAChB;AACA,sDAAsD,QAAQ;AAC9D;AACA;AACA,yBAAyB;AACzB;AACA,iEAAiE;AACjE;AACA;AACA,gBAAgB;AAChB;AACA,wDAAwD,QAAQ;AAChE;AACA;AACA,uBAAuB;AACvB;AACA,6DAA6D;AAC7D;AACA;AACA,gBAAgB;AAChB;AACA,sDAAsD,QAAQ;AAC9D;AACA;AACA,qBAAqB;AACrB;AACA,0DAA0D;AAC1D;AACA;AACA,gBAAgB;AAChB;AACA,qDAAqD,QAAQ;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6FAAyB,aAAa;AACtC;AACA;AACA;AACA;AACA;AACA,6FAAyB,aAAa;AACtC;AACA;AACA;AACA;AACA;AACA,6FAAyB,aAAa;AACtC;AACA;AACA;AACA;AACA;AACA,6FAAyB,aAAa;AACtC;AACA;AACA;AACA;AACA;AACA,6FAAyB,aAAa;AACtC;AACA;AACA;AACA;AACA;AACA,6FAAyB,aAAa;AACtC;AACA;AACA;AACA;AACA;AACA,6FAAyB,aAAa;AACtC;AACA;AACA;AACA;AACA;AACA,6FAAyB,aAAa;AACtC;AACA;AACA;AACA;AACA;AACA,6FAAyB,aAAa;AACtC;AACA;AACA;AACA;AACA;AACA,6FAAyB,aAAa;AACtC;AACA;AACA;AACA;AACA;AACA,6FAAyB,aAAa;AACtC;AACA;AACA;AACA;AACA;AACA,6FAAyB,aAAa;AACtC;AACA;AACA;AACA;AACA;AACA,6FAAyB,aAAa;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACO;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,oEAAoE;AACpE;AACA;AACA,uBAAuB,IAAI;AAC3B,2BAA2B,IAAI;AAC/B;AACA,0EAA0E;AAC1E;AACA;AACA,sBAAsB;AACtB;AACA,uDAAuD;AACvD;AACA;AACA;AACA,kDAAkD;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,CAAC;AACO;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,0CAA0C,QAAQ;AAClD;AACA;AACA,gBAAgB;AAChB;AACA,2CAA2C,kBAAkB;AAC7D;AACA;AACA,sBAAsB;AACtB;AACA,sDAAsD,QAAQ;AAC9D;AACA;AACA,gBAAgB;AAChB;AACA,gDAAgD,QAAQ;AACxD;AACA;AACA;AACA,mDAAmD;AACnD;AACA;AACA;AACA,mDAAmD;AACnD;AACA;AACA,yBAAyB;AACzB;AACA,0DAA0D;AAC1D;AACA;AACA,8BAA8B;AAC9B;AACA,oEAAoE;AACpE;AACA;AACA;AACA;AACA,sDAAsD;AACtD;AACA;AACA;AACA,8CAA8C,QAAQ;AACtD;AACA;AACA,qBAAqB;AACrB;AACA,kDAAkD;AAClD;AACA;AACA,gBAAgB;AAChB;AACA,6CAA6C,QAAQ;AACrD;AACA;AACA,uBAAuB;AACvB;AACA,sDAAsD;AACtD;AACA;AACA,gBAAgB;AAChB;AACA,+CAA+C,QAAQ;AACvD;AACA;AACA,qBAAqB,OAAO;AAC5B;AACA,oDAAoD;AACpD;AACA;AACA,gBAAgB,OAAO;AACvB;AACA,+CAA+C,QAAQ;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,OAAO;AACxB,iBAAiB,OAAO;AACxB;AACA,sDAAsD;AACtD;AACA;AACA,iBAAiB,OAAO;AACxB,iBAAiB,OAAO;AACxB;AACA,4DAA4D;AAC5D;AACA;AACA,gBAAgB;AAChB;AACA,sDAAsD,QAAQ;AAC9D;AACA;AACA,gBAAgB,OAAO;AACvB;AACA,gDAAgD,QAAQ;AACxD;AACA;AACA,iBAAiB,OAAO;AACxB;AACA,oDAAoD;AACpD;AACA;AACA,gBAAgB;AAChB;AACA,8CAA8C,QAAQ;AACtD;AACA;AACA,yBAAyB;AACzB;AACA,0DAA0D;AAC1D;AACA;AACA,gBAAgB;AAChB;AACA,gDAAgD,QAAQ;AACxD;AACA;AACA,oBAAoB;AACpB;AACA,gDAAgD,QAAQ;AACxD;AACA;AACA;AACA;AACA,gDAAgD,QAAQ;AACxD;AACA;AACA,wBAAwB;AACxB;AACA,wDAAwD;AACxD;AACA;AACA,gBAAgB;AAChB;AACA,gDAAgD,QAAQ;AACxD;AACA,6FAAyB,aAAa;AACtC;AACA;AACA;AACA;AACA;AACA,6FAAyB,aAAa;AACtC;AACA;AACA;AACA;AACA;AACA,6FAAyB,aAAa;AACtC;AACA;AACA;AACA;AACA;AACA,6FAAyB,aAAa;AACtC;AACA;AACA;AACA;AACA;AACA,6FAAyB,aAAa;AACtC;AACA;AACA;AACA;AACA;AACA,6FAAyB,aAAa;AACtC;AACA;AACA;AACA;AACA;AACA,6FAAyB,aAAa;AACtC;AACA;AACA;AACA;AACA;AACA,6FAAyB,aAAa;AACtC;AACA;AACA;AACA;AACA;AACA,6FAAyB,aAAa;AACtC;AACA;AACA;AACA;AACA;AACA,6FAAyB,aAAa;AACtC;AACA;AACA;AACA;AACA;AACA,6FAAyB,aAAa;AACtC;AACA;AACA;AACA;AACA;AACA,6FAAyB,aAAa;AACtC;AACA;AACA;AACA;AACA;AACA,6FAAyB,aAAa;AACtC;AACA;AACA;AACA;AACA;AACA,6FAAyB,aAAa;AACtC;AACA;AACA;AACA;AACA;AACA,6FAAyB,aAAa;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6FAAyB,aAAa;AACtC;AACA;AACA;AACA;AACA;AACA,6FAAyB,aAAa;AACtC;AACA;AACA;AACA;AACA;AACA,6FAAyB,aAAa;AACtC;AACA;AACA;AACA;AACA;AACA,6FAAyB,aAAa;AACtC;AACA;AACA;AACA;AACA;AACA,6FAAyB,aAAa;AACtC;AACA;AACA;AACA;AACA;AACA,6FAAyB,aAAa;AACtC;AACA;AACA;AACA;AACA;AACA,6FAAyB,aAAa;AACtC;AACA;AACA;AACA;AACA;AACA,6FAAyB,aAAa;AACtC;AACA;AACA;AACA;AACA;AACA,6FAAyB,aAAa;AACtC;AACA;AACA;AACA;AACA;AACA,6FAAyB,aAAa;AACtC;AACA;AACA;AACA;AACA;AACA,6FAAyB,aAAa;AACtC;AACA;AACA;AACA;AACA;AACA,6FAAyB,aAAa;AACtC;AACA;AACA;AACA;AACA;AACA,CAAC;AACO;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,iDAAiD,QAAQ;AACzD,2DAA2D;AAC3D,6DAA6D;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,kDAAkD,kBAAkB;AACpE;AACA,6FAAyB,aAAa;AACtC;AACA;AACA;AACA;AACA;AACA,6FAAyB,aAAa;AACtC;AACA;AACA;AACA;AACA;AACA,6FAAyB,aAAa;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACO;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,2CAA2C,QAAQ;AACnD;AACA;AACA,gBAAgB;AAChB;AACA,4CAA4C,kBAAkB;AAC9D;AACA;AACA,sBAAsB;AACtB;AACA,qDAAqD;AACrD;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,mDAAmD;AACnD;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA,2DAA2D;AAC3D;AACA;AACA,gBAAgB;AAChB;AACA,kDAAkD,QAAQ;AAC1D;AACA;AACA,2BAA2B;AAC3B;AACA,+DAA+D;AAC/D;AACA;AACA,gBAAgB;AAChB;AACA,oDAAoD,QAAQ;AAC5D;AACA;AACA,yBAAyB;AACzB;AACA,2DAA2D;AAC3D;AACA;AACA;AACA,kDAAkD,QAAQ;AAC1D;AACA;AACA,uBAAuB;AACvB;AACA,uDAAuD;AACvD;AACA;AACA,gBAAgB;AAChB;AACA,gDAAgD,QAAQ;AACxD;AACA;AACA,sBAAsB;AACtB;AACA,qDAAqD;AACrD;AACA;AACA,gBAAgB;AAChB;AACA,+CAA+C,QAAQ;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+DAA+D;AAC/D;AACA;AACA;AACA,oDAAoD,QAAQ;AAC5D;AACA;AACA,wBAAwB;AACxB;AACA,yDAAyD;AACzD;AACA;AACA,gBAAgB;AAChB;AACA,iDAAiD,QAAQ;AACzD;AACA,6FAAyB,aAAa;AACtC;AACA;AACA;AACA;AACA;AACA,6FAAyB,aAAa;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6FAAyB,aAAa;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6FAAyB,aAAa;AACtC;AACA;AACA;AACA;AACA;AACA,6FAAyB,aAAa;AACtC;AACA;AACA;AACA;AACA;AACA,6FAAyB,aAAa;AACtC;AACA;AACA;AACA;AACA;AACA,6FAAyB,aAAa;AACtC;AACA;AACA;AACA;AACA;AACA,6FAAyB,aAAa;AACtC;AACA;AACA;AACA;AACA;AACA,6FAAyB,aAAa;AACtC;AACA;AACA;AACA;AACA;AACA,6FAAyB,aAAa;AACtC;AACA;AACA;AACA;AACA;AACA,6FAAyB,aAAa;AACtC;AACA;AACA;AACA;AACA;AACA,6FAAyB,aAAa;AACtC;AACA;AACA;AACA;AACA;AACA,6FAAyB,aAAa;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6FAAyB,aAAa;AACtC;AACA;AACA;AACA;AACA;AACA,6FAAyB,aAAa;AACtC;AACA;AACA;AACA;AACA;AACA,6FAAyB,aAAa;AACtC;AACA;AACA;AACA;AACA;AACA,6FAAyB,aAAa;AACtC;AACA;AACA;AACA;AACA;AACA,CAAC;AACO;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA,gBAAgB;AAChB;AACA,6CAA6C,kBAAkB;AAC/D;AACA;AACA,sBAAsB;AACtB;AACA,sDAAsD;AACtD;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA,0DAA0D;AAC1D;AACA;AACA;AACA,kDAAkD,QAAQ;AAC1D;AACA;AACA,uBAAuB;AACvB;AACA,wDAAwD;AACxD;AACA;AACA,gBAAgB;AAChB;AACA,iDAAiD,QAAQ;AACzD;AACA;AACA,yBAAyB;AACzB;AACA,4DAA4D;AAC5D;AACA;AACA,gBAAgB;AAChB;AACA,mDAAmD,QAAQ;AAC3D;AACA;AACA,2BAA2B;AAC3B;AACA,gEAAgE;AAChE;AACA;AACA,gBAAgB;AAChB;AACA,qDAAqD,QAAQ;AAC7D;AACA;AACA,2BAA2B;AAC3B;AACA,gEAAgE;AAChE;AACA;AACA,gBAAgB;AAChB;AACA,qDAAqD,QAAQ;AAC7D;AACA;AACA,qBAAqB;AACrB;AACA,qDAAqD;AACrD;AACA;AACA,gBAAgB;AAChB;AACA,gDAAgD,QAAQ;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6FAAyB,aAAa;AACtC;AACA;AACA;AACA;AACA;AACA,6FAAyB,aAAa;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6FAAyB,aAAa;AACtC;AACA;AACA;AACA;AACA;AACA,6FAAyB,aAAa;AACtC;AACA;AACA;AACA;AACA;AACA,6FAAyB,aAAa;AACtC;AACA;AACA;AACA;AACA;AACA,6FAAyB,aAAa;AACtC;AACA;AACA;AACA;AACA;AACA,6FAAyB,aAAa;AACtC;AACA;AACA;AACA;AACA;AACA,6FAAyB,aAAa;AACtC;AACA;AACA;AACA;AACA;AACA,6FAAyB,aAAa;AACtC;AACA;AACA;AACA;AACA;AACA,6FAAyB,aAAa;AACtC;AACA;AACA;AACA;AACA;AACA,6FAAyB,aAAa;AACtC;AACA;AACA;AACA;AACA;AACA,6FAAyB,aAAa;AACtC;AACA;AACA;AACA;AACA;AACA,6FAAyB,aAAa;AACtC;AACA;AACA;AACA;AACA;AACA,6FAAyB,aAAa;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACO;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,+CAA+C,QAAQ;AACvD;AACA;AACA,gBAAgB;AAChB;AACA,gDAAgD,kBAAkB;AAClE;AACA;AACA,sBAAsB;AACtB;AACA,yDAAyD;AACzD;AACA;AACA,gBAAgB;AAChB;AACA,mDAAmD,QAAQ;AAC3D;AACA;AACA,sBAAsB;AACtB;AACA,yDAAyD;AACzD;AACA;AACA,gBAAgB;AAChB;AACA,mDAAmD,QAAQ;AAC3D;AACA;AACA,uBAAuB;AACvB;AACA,2DAA2D;AAC3D;AACA;AACA,gBAAgB;AAChB;AACA,oDAAoD,QAAQ;AAC5D;AACA;AACA,uBAAuB;AACvB;AACA,2DAA2D;AAC3D;AACA;AACA,gBAAgB;AAChB;AACA,oDAAoD,QAAQ;AAC5D;AACA;AACA;AACA,qDAAqD,QAAQ;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6FAAyB,aAAa;AACtC;AACA;AACA;AACA;AACA;AACA,6FAAyB,aAAa;AACtC;AACA;AACA;AACA;AACA;AACA,6FAAyB,aAAa;AACtC;AACA;AACA;AACA;AACA;AACA,6FAAyB,aAAa;AACtC;AACA;AACA;AACA;AACA;AACA,6FAAyB,aAAa;AACtC;AACA;AACA;AACA;AACA;AACA,6FAAyB,aAAa;AACtC;AACA;AACA;AACA;AACA;AACA,6FAAyB,aAAa;AACtC;AACA;AACA;AACA;AACA;AACA,6FAAyB,aAAa;AACtC;AACA;AACA;AACA;AACA;AACA,6FAAyB,aAAa;AACtC;AACA;AACA;AACA;AACA;AACA,6FAAyB,aAAa;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACO;AACR,iC;;;;;;;;;;;;;;;;;;;;;;AC96GiE;AACG;AAUjC;AAEM;AACS;AACF;AACyC;AAWzF,IAAa,8BAA8B;IASzC,wCAAmB,OAAsB,EAChC,SAAoB,EACpB,UAAsB,EACtB,QAAkB,EAClB,WAA8B,EAC9B,SAA0B,EAC1B,cAAsC;QAN5B,YAAO,GAAP,OAAO,CAAe;QAChC,cAAS,GAAT,SAAS,CAAW;QACpB,eAAU,GAAV,UAAU,CAAY;QACtB,aAAQ,GAAR,QAAQ,CAAU;QAClB,gBAAW,GAAX,WAAW,CAAmB;QAC9B,cAAS,GAAT,SAAS,CAAiB;QAC1B,mBAAc,GAAd,cAAc,CAAwB;QAR/C,YAAO,GAAY,KAAK,CAAC;QASvB,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC;QAC/B,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,KAAK,CAAC,IAAI,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,SAAS,CAAC,CAAC;QACtE,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,mBAAmB,CAAC,CAAC;IACnE,CAAC;IAED,uDAAc,GAAd;QACE,IAAI,CAAC,MAAM,GAAG,IAAI,yEAAM,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,EAAE,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;QAC9D,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;YACjB,IAAI,CAAC,eAAe,EAAE,CAAC;YACvB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAChC,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,IAAI,CAAC,OAAO,EAAE,CAAC;QACjB,CAAC;QACD,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACnC,CAAC;IAED,8DAAqB,GAArB,UAAsB,EAAU;QAAhC,iBAgBC;QAfC,IAAI,MAAM,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC;YACnC,OAAO,EAAE,aAAa;SACvB,CAAC,CAAC;QACH,MAAM,CAAC,OAAO,EAAE,CAAC;QACjB,IAAI,CAAC,cAAc,CAAC,uBAAuB,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,UAAC,IAAI;YACxD,EAAE,CAAC,CAAC,IAAI,IAAI,IAAI,CAAC,CAAC,CAAC;gBACjB,KAAI,CAAC,mBAAmB,CAAC,2DAA2D,CAAC,CAAC;gBACtF,MAAM,CAAC,OAAO,EAAE,CAAC;gBACjB,MAAM,CAAC;YACT,CAAC;YACD,KAAI,CAAC,GAAG,GAAG,IAAI,CAAC;YAChB,MAAM,CAAC,OAAO,EAAE,CAAC;QACnB,CAAC,CAAC,CAAC,KAAK,CAAC,cAAI;YACX,OAAO,CAAC,KAAK,CAAC,qCAAqC,CAAC,CAAC;QACvD,CAAC,CAAC,CAAC;IACL,CAAC;IAED,4DAAmB,GAAnB,UAAoB,OAAO;QACzB,IAAI,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC;YAChC,KAAK,EAAE,OAAO;YACd,QAAQ,EAAE,OAAO;YACjB,OAAO,EAAE,CAAC,SAAS,CAAC;SACrB,CAAC,CAAC;QACH,KAAK,CAAC,OAAO,EAAE,CAAC;IAClB,CAAC;IAED,oDAAW,GAAX,UAAY,MAAM;QAChB,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC;YAClB,MAAM,EAAE,MAAM;SACf,CAAC,CAAC;IACL,CAAC;IAED,wDAAe,GAAf;QAAA,iBAoBC;QAnBC,IAAI,UAAU,GAAqB;YACjC,MAAM,EAAE;gBACN,MAAM,EAAE;oBACN,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,OAAO;oBACrB,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,QAAQ;iBACvB;gBACD,IAAI,EAAE,EAAE;gBACR,IAAI,EAAE,EAAE;aACT;SACF,CAAC;QACF,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,KAAK,EAAE,UAAU,CAAC,CAAC;QACrD,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,kFAAe,CAAC,SAAS,CAAC;aACpC,IAAI,CAAC;YACJ,KAAI,CAAC,WAAW,CAAC,KAAI,CAAC,MAAM,CAAC,CAAC;YAC9B,KAAI,CAAC,cAAc,CAAC,KAAI,CAAC,MAAM,CAAC,CAAC;QACnC,CAAC,CAAC;aACD,KAAK,CAAC,eAAK;YACV,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACrB,CAAC,CAAC,CAAC;IACP,CAAC;IAED,uDAAc,GAAd,UAAe,MAAM;QACnB,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;YACjB,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC;gBACjB,KAAK,EAAE,IAAI,CAAC,GAAG,CAAC,MAAM;gBACtB,IAAI,EAAE,MAAM;gBACZ,SAAS,EAAE,MAAM;gBACjB,QAAQ,EAAE,MAAM;aACjB,CAAC,CAAC;QACL,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,IAAI,MAAM,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC;gBAClC,QAAQ,EAAE,MAAM;gBAChB,GAAG,EAAE,IAAI,CAAC,GAAG;aACd,CAAC,CAAC;QACL,CAAC;IACH,CAAC;IAED,gDAAO,GAAP;QACE,IAAI,UAAU,GAAG;YACf,MAAM,EAAE,IAAI,CAAC,MAAM;YACnB,IAAI,EAAE,EAAE;YACR,SAAS,EAAE,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO;YACxC,gBAAgB,EAAE,IAAI;SACvB,CAAC;QACF,IAAI,CAAC,GAAG,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,aAAa,EAAE,UAAU,CAAC,CAAC;IAC5E,CAAC;IAEH,qCAAC;AAAD,CAAC;AA/GoB;IAAlB,0EAAS,CAAC,MAAM,CAAC;8BAAa,iEAAU;kEAAC;AAF/B,8BAA8B;IAP1C,wEAAS,CAAC;QACT,OAAO,EAAE,gDAAgD;KAC1D,CAAC;IACD,wEAAS,CAAC;QACT,QAAQ,EAAE,kCAAkC;OACG;KAChD,CAAC;yEAUyC;QACrB,6EAAS;QACR,gEAAU;QACZ,wEAAQ;QACL,uEAAiB;QACnB,0GAAe;QACV,sBAAsB;AAkGhD;SAjHY,8BAA8B,gB","file":"0.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { IonicPageModule } from 'ionic-angular';\r\nimport { InformacionEstablecimientoPage } from './informacion-establecimiento';\r\nimport { GoogleMaps } from '@ionic-native/google-maps';\r\nimport { ServicioBuscarProvider } from '../../providers/servicio-buscar/servicio-buscar';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    InformacionEstablecimientoPage,\r\n  ],\r\n  imports: [\r\n    IonicPageModule.forChild(InformacionEstablecimientoPage),\r\n  ],\r\n  providers: [\r\n    GoogleMaps,\r\n    ServicioBuscarProvider\r\n  ]\r\n})\r\nexport class InformacionEstablecimientoPageModule {}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/informacion-establecimiento/informacion-establecimiento.module.ts","import { Injectable } from '@angular/core';\r\nimport { Http, Headers, RequestOptions, RequestOptionsArgs } from '@angular/http';\r\nimport 'rxjs/add/operator/map';\r\nimport { ConfiguracionMaypiProvider } from '../configuracion-maypi/configuracion-maypi';\r\nimport { Establecimiento } from '../../models/establecimieto.interface';\r\n/*\r\n  Generated class for the ServicioBuscarProvider provider.\r\n\r\n  See https://angular.io/guide/dependency-injection for more info on providers\r\n  and Angular DI.\r\n*/\r\n@Injectable()\r\nexport class ServicioBuscarProvider {\r\n\r\n  linkGeneral: string;\r\n  rutaEstableciemtos: string;\r\n  establecimientos: Array<Establecimiento>;\r\n  establecimiento: Establecimiento;\r\n\r\n  constructor(public http: Http, public configuracionMaypi: ConfiguracionMaypiProvider) {\r\n    this.linkGeneral = this.configuracionMaypi.getLinkGeneral();\r\n    this.rutaEstableciemtos = \"Establecimiento/GetEstablecimientos\";\r\n  }\r\n\r\n  getAllEstablecimientosPorCrierio(criterio: string) {\r\n    return new Promise(resolve => {\r\n      let params = { clave: criterio, latitud: \"\", longitud: \"\" };\r\n      this.http.get(this.linkGeneral + this.rutaEstableciemtos, { params: params}).map(res => res.json()).subscribe(data => {\r\n        this.establecimientos = data;\r\n        resolve(this.establecimientos);\r\n      }, error => resolve(null));\r\n    })\r\n  }\r\n\r\n  getEstablecimientoPorId(id: number) {\r\n    return new Promise(resolve => {\r\n      let params = { id: id };\r\n      this.http.get(this.linkGeneral + this.rutaEstableciemtos, { params: params}).map(res => res.json()).subscribe(data => {\r\n        this.establecimiento = data;\r\n        resolve(this.establecimiento);\r\n      }, error => resolve(null));\r\n    })\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/servicio-buscar/servicio-buscar.ts","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nimport { Injectable } from '@angular/core';\nimport { CordovaCheck, CordovaInstance, Plugin, InstanceProperty, InstanceCheck, checkAvailability, IonicNativePlugin } from '@ionic-native/core';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/observable/fromEvent';\n/**\n * @hidden\n */\nvar LatLng = (function () {\n    function LatLng(lat, lng) {\n        this.lat = lat;\n        this.lng = lng;\n    }\n    LatLng.prototype.equals = function (other) {\n        return this.lat === other.lat && this.lng === other.lng;\n    };\n    LatLng.prototype.toString = function () {\n        return this.lat + ',' + this.lng;\n    };\n    LatLng.prototype.toUrlValue = function (precision) {\n        precision = precision || 6;\n        return this.lat.toFixed(precision) + ',' + this.lng.toFixed(precision);\n    };\n    return LatLng;\n}());\nexport { LatLng };\n/**\n * @hidden\n */\nvar LatLngBounds = (function () {\n    function LatLngBounds(points) {\n        this._objectInstance = new (GoogleMaps.getPlugin()).LatLngBounds(points);\n    }\n    /**\n     * Converts to string\n     * @return {string}\n     */\n    LatLngBounds.prototype.toString = function () { return; };\n    /**\n     * Returns a string of the form \"lat_sw,lng_sw,lat_ne,lng_ne\" for this bounds, where \"sw\" corresponds to the southwest corner of the bounding box, while \"ne\" corresponds to the northeast corner of that box.\n     * @param precision {number}\n     * @return {string}\n     */\n    LatLngBounds.prototype.toUrlValue = function (precision) { return; };\n    /**\n     * Extends this bounds to contain the given point.\n     * @param LatLng {ILatLng}\n     */\n    LatLngBounds.prototype.extend = function (LatLng) { };\n    /**\n     * Returns true if the given lat/lng is in this bounds.\n     * @param LatLng {ILatLng}\n     */\n    LatLngBounds.prototype.contains = function (LatLng) { return; };\n    /**\n     * Computes the center of this LatLngBounds\n     * @return {LatLng}\n     */\n    LatLngBounds.prototype.getCenter = function () { return; };\n    __decorate([\n        InstanceProperty,\n        __metadata(\"design:type\", Object)\n    ], LatLngBounds.prototype, \"northeast\", void 0);\n    __decorate([\n        InstanceProperty,\n        __metadata(\"design:type\", Object)\n    ], LatLngBounds.prototype, \"southwest\", void 0);\n    __decorate([\n        InstanceProperty,\n        __metadata(\"design:type\", String)\n    ], LatLngBounds.prototype, \"type\", void 0);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", String)\n    ], LatLngBounds.prototype, \"toString\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Number]),\n        __metadata(\"design:returntype\", String)\n    ], LatLngBounds.prototype, \"toUrlValue\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Object]),\n        __metadata(\"design:returntype\", void 0)\n    ], LatLngBounds.prototype, \"extend\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Object]),\n        __metadata(\"design:returntype\", Boolean)\n    ], LatLngBounds.prototype, \"contains\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", LatLng)\n    ], LatLngBounds.prototype, \"getCenter\", null);\n    return LatLngBounds;\n}());\nexport { LatLngBounds };\n/**\n * @hidden\n */\nvar VisibleRegion = (function () {\n    function VisibleRegion(southwest, northeast, farLeft, farRight, nearLeft, nearRight) {\n        this._objectInstance = new (GoogleMaps.getPlugin()).VisibleRegion(southwest, northeast, farLeft, farRight, nearLeft, nearRight);\n    }\n    /**\n     * Converts to string\n     * @return {string}\n     */\n    VisibleRegion.prototype.toString = function () { return; };\n    /**\n     * Returns a string of the form \"lat_sw,lng_sw,lat_ne,lng_ne\" for this bounds, where \"sw\" corresponds to the southwest corner of the bounding box, while \"ne\" corresponds to the northeast corner of that box.\n     * @param precision {number}\n     * @return {string}\n     */\n    VisibleRegion.prototype.toUrlValue = function (precision) { return; };\n    /**\n     * Returns true if the given lat/lng is in this bounds.\n     * @param LatLng {ILatLng}\n     */\n    VisibleRegion.prototype.contains = function (LatLng) { return; };\n    __decorate([\n        InstanceProperty,\n        __metadata(\"design:type\", Object)\n    ], VisibleRegion.prototype, \"northeast\", void 0);\n    __decorate([\n        InstanceProperty,\n        __metadata(\"design:type\", Object)\n    ], VisibleRegion.prototype, \"southwest\", void 0);\n    __decorate([\n        InstanceProperty,\n        __metadata(\"design:type\", Object)\n    ], VisibleRegion.prototype, \"farLeft\", void 0);\n    __decorate([\n        InstanceProperty,\n        __metadata(\"design:type\", Object)\n    ], VisibleRegion.prototype, \"farRight\", void 0);\n    __decorate([\n        InstanceProperty,\n        __metadata(\"design:type\", Object)\n    ], VisibleRegion.prototype, \"nearLeft\", void 0);\n    __decorate([\n        InstanceProperty,\n        __metadata(\"design:type\", Object)\n    ], VisibleRegion.prototype, \"nearRight\", void 0);\n    __decorate([\n        InstanceProperty,\n        __metadata(\"design:type\", String)\n    ], VisibleRegion.prototype, \"type\", void 0);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", String)\n    ], VisibleRegion.prototype, \"toString\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Number]),\n        __metadata(\"design:returntype\", String)\n    ], VisibleRegion.prototype, \"toUrlValue\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Object]),\n        __metadata(\"design:returntype\", Boolean)\n    ], VisibleRegion.prototype, \"contains\", null);\n    return VisibleRegion;\n}());\nexport { VisibleRegion };\n/**\n * @hidden\n * You can listen to these events where appropriate\n */\nexport var GoogleMapsEvent = {\n    MAP_READY: 'map_ready',\n    MAP_LOADED: 'map_loaded',\n    MAP_CLICK: 'map_click',\n    MAP_LONG_CLICK: 'map_long_click',\n    MY_LOCATION_BUTTON_CLICK: 'my_location_button_click',\n    INDOOR_BUILDING_FOCUSED: 'indoor_building_focused',\n    INDOOR_LEVEL_ACTIVATED: 'indoor_level_activated',\n    CAMERA_MOVE_START: 'camera_move_start',\n    CAMERA_MOVE: 'camera_move',\n    CAMERA_MOVE_END: 'camera_move_end',\n    OVERLAY_CLICK: 'overlay_click',\n    POLYGON_CLICK: 'polygon_click',\n    POLYLINE_CLICK: 'polyline_click',\n    CIRCLE_CLICK: 'circle_click',\n    GROUND_OVERLAY_CLICK: 'groundoverlay_click',\n    INFO_CLICK: 'info_click',\n    INFO_LONG_CLICK: 'info_long_click',\n    INFO_CLOSE: 'info_close',\n    INFO_OPEN: 'info_open',\n    CLUSTER_CLICK: 'cluster_click',\n    MARKER_CLICK: 'marker_click',\n    MARKER_DRAG: 'marker_drag',\n    MARKER_DRAG_START: 'marker_drag_start',\n    MARKER_DRAG_END: 'marker_drag_end',\n    MAP_DRAG: 'map_drag',\n    MAP_DRAG_START: 'map_drag_start',\n    MAP_DRAG_END: 'map_drag_end'\n};\n/**\n * @hidden\n */\nexport var GoogleMapsAnimation = {\n    BOUNCE: 'BOUNCE',\n    DROP: 'DROP'\n};\n/**\n * @hidden\n */\nexport var GoogleMapsMapTypeId = {\n    NORMAL: 'MAP_TYPE_NORMAL',\n    ROADMAP: 'MAP_TYPE_ROADMAP',\n    SATELLITE: 'MAP_TYPE_SATELLITE',\n    HYBRID: 'MAP_TYPE_HYBRID',\n    TERRAIN: 'MAP_TYPE_TERRAIN',\n    NONE: 'MAP_TYPE_NONE'\n};\n/**\n * @name Google Maps\n * @description\n * This plugin uses the native Google Maps SDK\n * Note: As of Ionic native 4.0, this using the 2.0 version of the google maps plugin. Please make sure your plugin is updated\n * @usage\n * ```typescript\n * import {\n *  GoogleMaps,\n *  GoogleMap,\n *  GoogleMapsEvent,\n *  GoogleMapOptions,\n *  CameraPosition,\n *  MarkerOptions,\n *  Marker\n * } from '@ionic-native/google-maps';\n * import { Component } from \"@angular/core/\";\n *\n * @Component({\n *   selector: 'page-home',\n *   templateUrl: 'home.html'\n * })\n * export class HomePage {\n *   map: GoogleMap;\n *   constructor(private googleMaps: GoogleMaps) { }\n *\n *   ionViewDidLoad() {\n *    this.loadMap();\n *   }\n *\n *  loadMap() {\n *\n *     let mapOptions: GoogleMapOptions = {\n *       camera: {\n *         target: {\n *           lat: 43.0741904,\n *           lng: -89.3809802\n *         },\n *         zoom: 18,\n *         tilt: 30\n *       }\n *     };\n *\n *     this.map = this.googleMaps.create('map_canvas', mapOptions);\n *\n *     // Wait the MAP_READY before using any methods.\n *     this.map.one(GoogleMapsEvent.MAP_READY)\n *       .then(() => {\n *         console.log('Map is ready!');\n *\n *         // Now you can use all methods safely.\n *         this.map.addMarker({\n *             title: 'Ionic',\n *             icon: 'blue',\n *             animation: 'DROP',\n *             position: {\n *               lat: 43.0741904,\n *               lng: -89.3809802\n *             }\n *           })\n *           .then(marker => {\n *             marker.on(GoogleMapsEvent.MARKER_CLICK)\n *               .subscribe(() => {\n *                 alert('clicked');\n *               });\n *           });\n *\n *       });\n *   }\n * }\n *\n * ```\n * @classes\n * GoogleMap\n * Circle\n * Encoding\n * Environment\n * Geocoder\n * GroundOverlay\n * HtmlInfoWindow\n * Geocoder\n * LatLng\n * LatLngBounds\n * Marker\n * MarkerCluster\n * Polygon\n * Polyline\n * Spherical\n * Poly\n * TileOverlay\n * BaseClass\n * BaseArrayClass\n * @interfaces\n * GoogleMapOptions\n * CameraPosition\n * CircleOptions\n * GeocoderRequest\n * GeocoderResult\n * GroundOverlayOptions\n * ILatLng\n * MarkerIcon\n * MarkerOptions\n * MarkerClusterIcon\n * MarkerClusterOptions\n * MyLocation\n * MyLocationOptions\n * PolygonOptions\n * PolylineOptions\n * TileOverlayOptions\n * VisibleRegion\n */\nvar GoogleMaps = (function (_super) {\n    __extends(GoogleMaps, _super);\n    function GoogleMaps() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    GoogleMaps_1 = GoogleMaps;\n    /**\n     * Creates a new GoogleMap instance\n     * @param element {string | HTMLElement} Element ID or reference to attach the map to\n     * @param options {any} Options\n     * @return {GoogleMap}\n     */\n    GoogleMaps.create = function (element, options) {\n        if (element instanceof HTMLElement) {\n            if (element.getAttribute('__pluginMapId')) {\n                console.error('GoogleMaps', element.tagName + '[__pluginMapId=\\'' + element.getAttribute('__pluginMapId') + '\\'] has already map.');\n                return;\n            }\n        }\n        else if (typeof element === 'object') {\n            options = element;\n            element = null;\n        }\n        var googleMap = new GoogleMap(element, options);\n        googleMap.set('_overlays', {});\n        return googleMap;\n    };\n    /**\n     * @deprecation\n     * @hidden\n     */\n    GoogleMaps.prototype.create = function (element, options) {\n        console.error('GoogleMaps', '[deprecated] Please use GoogleMaps.create()');\n        return GoogleMaps_1.create(element, options);\n    };\n    GoogleMaps.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    GoogleMaps.ctorParameters = function () { return []; };\n    GoogleMaps = GoogleMaps_1 = __decorate([\n        Plugin({\n            pluginName: 'GoogleMaps',\n            pluginRef: 'plugin.google.maps',\n            plugin: 'cordova-plugin-googlemaps',\n            repo: 'https://github.com/mapsplugin/cordova-plugin-googlemaps',\n            install: 'ionic cordova plugin add cordova-plugin-googlemaps --variable API_KEY_FOR_ANDROID=\"YOUR_ANDROID_API_KEY_IS_HERE\" --variable API_KEY_FOR_IOS=\"YOUR_IOS_API_KEY_IS_HERE\"',\n            installVariables: ['API_KEY_FOR_ANDROID', 'API_KEY_FOR_IOS'],\n            platforms: ['Android', 'iOS']\n        })\n    ], GoogleMaps);\n    return GoogleMaps;\n    var GoogleMaps_1;\n}(IonicNativePlugin));\nexport { GoogleMaps };\n/**\n * @hidden\n * https://github.com/mapsplugin/cordova-plugin-googlemaps-doc/blob/master/v2.0.0/class/BaseClass/README.md\n */\nvar BaseClass = (function () {\n    function BaseClass() {\n    }\n    /**\n     * Adds an event listener.\n     *\n     * @return {Observable<any>}\n     */\n    BaseClass.prototype.addEventListener = function (eventName) {\n        var _this = this;\n        return new Observable(function (observer) {\n            _this._objectInstance.on(eventName, function () {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i] = arguments[_i];\n                }\n                if (args[args.length - 1] instanceof GoogleMaps.getPlugin().BaseClass) {\n                    if (args[args.length - 1].type === 'Map') {\n                        args[args.length - 1] = _this;\n                    }\n                    else if (_this instanceof MarkerCluster) {\n                        var overlay = _this.get(args[args.length - 1].getId());\n                        if (!overlay) {\n                            var markerJS = args[args.length - 1];\n                            var markerId_1 = markerJS.getId();\n                            var markerCluster = _this;\n                            overlay = new Marker(markerCluster.getMap(), markerJS);\n                            _this.get('_overlays')[markerId_1] = overlay;\n                            markerJS.one(markerJS.getId() + '_remove', function () {\n                                _this.get('_overlays')[markerId_1] = null;\n                            });\n                        }\n                        args[args.length - 1] = overlay;\n                    }\n                    else {\n                        args[args.length - 1] = _this._objectInstance.getMap().get('_overlays')[args[args.length - 1].getId()];\n                    }\n                }\n                observer.next(args);\n            });\n        });\n    };\n    /**\n     * Adds an event listener that works once.\n     *\n     * @return {Promise<any>}\n     */\n    BaseClass.prototype.addListenerOnce = function (eventName) {\n        var _this = this;\n        return new Promise(function (resolve) {\n            _this._objectInstance.one(eventName, function () {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i] = arguments[_i];\n                }\n                if (args[args.length - 1] instanceof GoogleMaps.getPlugin().BaseClass) {\n                    if (args[args.length - 1].type === 'Map') {\n                        args[args.length - 1] = _this;\n                    }\n                    else if (_this instanceof MarkerCluster) {\n                        var overlay = _this.get(args[args.length - 1].getId());\n                        if (!overlay) {\n                            var markerJS = args[args.length - 1];\n                            var markerId_2 = markerJS.getId();\n                            var markerCluster = _this;\n                            overlay = new Marker(markerCluster.getMap(), markerJS);\n                            _this.get('_overlays')[markerId_2] = overlay;\n                            markerJS.one(markerJS.getId() + '_remove', function () {\n                                _this.get('_overlays')[markerId_2] = null;\n                            });\n                        }\n                        args[args.length - 1] = overlay;\n                    }\n                    else {\n                        args[args.length - 1] = _this._objectInstance.getMap().get('_overlays')[args[args.length - 1].getId()];\n                    }\n                }\n                resolve(args);\n            });\n        });\n    };\n    /**\n     * Gets a value\n     * @param key\n     */\n    BaseClass.prototype.get = function (key) { return; };\n    /**\n     * Sets a value\n     * @param key\n     * @param value\n     */\n    BaseClass.prototype.set = function (key, value, noNotify) { };\n    /**\n     * Bind a key to another object\n     * @param key {string}\n     * @param target {any}\n     * @param targetKey? {string}\n     * @param noNotify? {boolean}\n     */\n    BaseClass.prototype.bindTo = function (key, target, targetKey, noNotify) { };\n    /**\n     * Listen to a map event.\n     *\n     * @return {Observable<any>}\n     */\n    BaseClass.prototype.on = function (eventName) {\n        var _this = this;\n        return new Observable(function (observer) {\n            _this._objectInstance.on(eventName, function () {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i] = arguments[_i];\n                }\n                if (args[args.length - 1] instanceof GoogleMaps.getPlugin().BaseClass) {\n                    if (args[args.length - 1].type === 'Map') {\n                        args[args.length - 1] = _this;\n                    }\n                    else if (_this instanceof MarkerCluster) {\n                        var overlay = _this.get(args[args.length - 1].getId());\n                        if (!overlay) {\n                            var markerJS = args[args.length - 1];\n                            var markerId_3 = markerJS.getId();\n                            var markerCluster = _this;\n                            overlay = new Marker(markerCluster.getMap(), markerJS);\n                            _this.get('_overlays')[markerId_3] = overlay;\n                            markerJS.one(markerJS.getId() + '_remove', function () {\n                                _this.get('_overlays')[markerId_3] = null;\n                            });\n                        }\n                        args[args.length - 1] = overlay;\n                    }\n                    else {\n                        args[args.length - 1] = _this._objectInstance.getMap().get('_overlays')[args[args.length - 1].getId()];\n                    }\n                }\n                observer.next(args);\n            });\n        });\n    };\n    /**\n     * Listen to a map event only once.\n     *\n     * @return {Promise<any>}\n     */\n    BaseClass.prototype.one = function (eventName) {\n        var _this = this;\n        return new Promise(function (resolve) {\n            _this._objectInstance.one(eventName, function () {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i] = arguments[_i];\n                }\n                if (args[args.length - 1] instanceof GoogleMaps.getPlugin().BaseClass) {\n                    if (args[args.length - 1].type === 'Map') {\n                        args[args.length - 1] = _this;\n                    }\n                    else if (_this instanceof MarkerCluster) {\n                        var overlay = _this.get(args[args.length - 1].getId());\n                        if (!overlay) {\n                            var markerJS = args[args.length - 1];\n                            var markerId_4 = markerJS.getId();\n                            var markerCluster = _this;\n                            overlay = new Marker(markerCluster.getMap(), markerJS);\n                            _this.get('_overlays')[markerId_4] = overlay;\n                            markerJS.one(markerJS.getId() + '_remove', function () {\n                                _this.get('_overlays')[markerId_4] = null;\n                            });\n                        }\n                        args[args.length - 1] = overlay;\n                    }\n                    else {\n                        args[args.length - 1] = _this._objectInstance.getMap().get('_overlays')[args[args.length - 1].getId()];\n                    }\n                }\n                resolve(args);\n            });\n        });\n    };\n    /**\n     * Clears all stored values\n     */\n    BaseClass.prototype.empty = function () { };\n    /**\n     * Dispatch event.\n     */\n    BaseClass.prototype.trigger = function (eventName) {\n        var parameters = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            parameters[_i - 1] = arguments[_i];\n        }\n    };\n    /**\n     * Executes off() and empty()\n     */\n    BaseClass.prototype.destroy = function () {\n        var map = this._objectInstance.getMap();\n        if (map) {\n            delete this._objectInstance.getMap().get('_overlays')[this._objectInstance.getId()];\n        }\n        this._objectInstance.remove();\n    };\n    __decorate([\n        InstanceCheck({ observable: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [String]),\n        __metadata(\"design:returntype\", Observable)\n    ], BaseClass.prototype, \"addEventListener\", null);\n    __decorate([\n        InstanceCheck(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [String]),\n        __metadata(\"design:returntype\", Promise)\n    ], BaseClass.prototype, \"addListenerOnce\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [String]),\n        __metadata(\"design:returntype\", Object)\n    ], BaseClass.prototype, \"get\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [String, Object, Boolean]),\n        __metadata(\"design:returntype\", void 0)\n    ], BaseClass.prototype, \"set\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [String, Object, String, Boolean]),\n        __metadata(\"design:returntype\", void 0)\n    ], BaseClass.prototype, \"bindTo\", null);\n    __decorate([\n        InstanceCheck({ observable: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [String]),\n        __metadata(\"design:returntype\", Observable)\n    ], BaseClass.prototype, \"on\", null);\n    __decorate([\n        InstanceCheck(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [String]),\n        __metadata(\"design:returntype\", Promise)\n    ], BaseClass.prototype, \"one\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], BaseClass.prototype, \"empty\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [String, Object]),\n        __metadata(\"design:returntype\", void 0)\n    ], BaseClass.prototype, \"trigger\", null);\n    __decorate([\n        CordovaCheck({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], BaseClass.prototype, \"destroy\", null);\n    BaseClass = __decorate([\n        Plugin({\n            plugin: 'cordova-plugin-googlemaps',\n            pluginName: 'GoogleMaps',\n            pluginRef: 'plugin.google.maps.BaseClass',\n            repo: ''\n        })\n    ], BaseClass);\n    return BaseClass;\n}());\nexport { BaseClass };\n/**\n * @hidden\n * https://github.com/mapsplugin/cordova-plugin-googlemaps-doc/blob/master/v2.0.0/class/BaseArrayClass/README.md\n */\nvar BaseArrayClass = (function (_super) {\n    __extends(BaseArrayClass, _super);\n    function BaseArrayClass(initialData) {\n        var _this = _super.call(this) || this;\n        if (initialData instanceof GoogleMaps.getPlugin().BaseArrayClass) {\n            _this._objectInstance = initialData;\n        }\n        else {\n            _this._objectInstance = new (GoogleMaps.getPlugin().BaseArrayClass)(initialData);\n        }\n        return _this;\n    }\n    /**\n     * Removes all elements from the array.\n     * @param noNotify? {boolean} Set true to prevent remove_at events.\n     */\n    BaseArrayClass.prototype.empty = function (noNotify) { };\n    /**\n     * Iterate over each element, calling the provided callback.\n     * @param fn {Function}\n     * @param callback? {Function}\n     */\n    BaseArrayClass.prototype.forEach = function (fn) { };\n    /**\n     * Iterate over each element, calling the provided callback.\n     * @param fn {Function}\n     * @return {Promise<any>}\n     */\n    BaseArrayClass.prototype.forEachAsync = function (fn) {\n        var _this = this;\n        return new Promise(function (resolve) {\n            _this._objectInstance.forEach(fn, resolve);\n        });\n    };\n    /**\n     * Iterate over each element, then return a new value.\n     * Then you can get the results of each callback.\n     * @param fn {Function}\n     * @param callback? {Function}\n     * @return {Array<Object>} returns a new array with the results\n     */\n    BaseArrayClass.prototype.map = function (fn) { return; };\n    /**\n     * Iterate over each element, calling the provided callback.\n     * Then you can get the results of each callback.\n     * @param fn {Function}\n     * @param callback? {Function}\n     * @return {Promise<any>} returns a new array with the results\n     */\n    BaseArrayClass.prototype.mapAsync = function (fn) {\n        var _this = this;\n        return new Promise(function (resolve) {\n            _this._objectInstance.map(fn, resolve);\n        });\n    };\n    /**\n     * The filter() method creates a new array with all elements that pass the test implemented by the provided function.\n     * @param fn {Function}\n     * @param callback? {Function}\n     * @return {Array<Object>} returns a new filtered array\n     */\n    BaseArrayClass.prototype.filter = function (fn) { return; };\n    /**\n     * The filterAsync() method creates a new array with all elements that pass the test implemented by the provided function.\n     * @param fn {Function}\n     * @param callback? {Function}\n     * @return {Promise<any>} returns a new filtered array\n     */\n    BaseArrayClass.prototype.filterAsync = function (fn) {\n        var _this = this;\n        return new Promise(function (resolve) {\n            _this._objectInstance.filter(fn, resolve);\n        });\n    };\n    /**\n     * Returns a reference to the underlying Array.\n     * @return {Array<Object>}\n     */\n    BaseArrayClass.prototype.getArray = function () { return; };\n    /**\n     * Returns the element at the specified index.\n     * @param index {number}\n     * @return {Object}\n     */\n    BaseArrayClass.prototype.getAt = function (index) { };\n    /**\n     * Returns the number of the elements.\n     * @return {number}\n     */\n    BaseArrayClass.prototype.getLength = function () { return; };\n    /**\n     * The indexOf() method returns the first index at which a given element can be found in the array, or -1 if it is not present.\n     * @param element {Object}\n     * @return {number}\n     */\n    BaseArrayClass.prototype.indexOf = function (element) { return; };\n    /**\n     * The reverse() method reverses an array in place.\n     */\n    BaseArrayClass.prototype.reverse = function () { };\n    /**\n     * The sort() method sorts the elements of an array in place and returns the array.\n     */\n    BaseArrayClass.prototype.sort = function () { };\n    /**\n     * Inserts an element at the specified index.\n     * @param index {number}\n     * @param element {Object}\n     * @param noNotify? {boolean} Set true to prevent insert_at events.\n     * @return {Object}\n     */\n    BaseArrayClass.prototype.insertAt = function (index, element, noNotify) { };\n    /**\n     * Removes the last element of the array and returns that element.\n     * @param noNotify? {boolean} Set true to prevent remove_at events.\n     * @return {Object}\n     */\n    BaseArrayClass.prototype.pop = function (noNotify) { return; };\n    /**\n     * Adds one element to the end of the array and returns the new length of the array.\n     * @param element {object}\n     * @param noNotify? {boolean} Set true to prevent insert_at events.\n     */\n    BaseArrayClass.prototype.push = function (element, noNotify) { };\n    /**\n     * Removes an element from the specified index.\n     * @param index {number}\n     * @param noNotify? {boolean} Set true to prevent insert_at events.\n     */\n    BaseArrayClass.prototype.removeAt = function (index, noNotify) { };\n    /**\n     * Sets an element at the specified index.\n     * @param index {number}\n     * @param element {object}\n     * @param noNotify? {boolean} Set true to prevent set_at events.\n     */\n    BaseArrayClass.prototype.setAt = function (index, element, noNotify) { };\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Boolean]),\n        __metadata(\"design:returntype\", void 0)\n    ], BaseArrayClass.prototype, \"empty\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Function]),\n        __metadata(\"design:returntype\", void 0)\n    ], BaseArrayClass.prototype, \"forEach\", null);\n    __decorate([\n        CordovaCheck(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Function]),\n        __metadata(\"design:returntype\", Promise)\n    ], BaseArrayClass.prototype, \"forEachAsync\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Function]),\n        __metadata(\"design:returntype\", Array)\n    ], BaseArrayClass.prototype, \"map\", null);\n    __decorate([\n        CordovaCheck(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Function]),\n        __metadata(\"design:returntype\", Promise)\n    ], BaseArrayClass.prototype, \"mapAsync\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Function]),\n        __metadata(\"design:returntype\", Array)\n    ], BaseArrayClass.prototype, \"filter\", null);\n    __decorate([\n        CordovaCheck(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Function]),\n        __metadata(\"design:returntype\", Promise)\n    ], BaseArrayClass.prototype, \"filterAsync\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", Array)\n    ], BaseArrayClass.prototype, \"getArray\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Number]),\n        __metadata(\"design:returntype\", Object)\n    ], BaseArrayClass.prototype, \"getAt\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", Number)\n    ], BaseArrayClass.prototype, \"getLength\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Object]),\n        __metadata(\"design:returntype\", Number)\n    ], BaseArrayClass.prototype, \"indexOf\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], BaseArrayClass.prototype, \"reverse\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], BaseArrayClass.prototype, \"sort\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Number, Object, Boolean]),\n        __metadata(\"design:returntype\", void 0)\n    ], BaseArrayClass.prototype, \"insertAt\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Boolean]),\n        __metadata(\"design:returntype\", Object)\n    ], BaseArrayClass.prototype, \"pop\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Object, Boolean]),\n        __metadata(\"design:returntype\", void 0)\n    ], BaseArrayClass.prototype, \"push\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Number, Boolean]),\n        __metadata(\"design:returntype\", void 0)\n    ], BaseArrayClass.prototype, \"removeAt\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Number, Object, Boolean]),\n        __metadata(\"design:returntype\", void 0)\n    ], BaseArrayClass.prototype, \"setAt\", null);\n    BaseArrayClass = __decorate([\n        Plugin({\n            plugin: 'cordova-plugin-googlemaps',\n            pluginName: 'GoogleMaps',\n            pluginRef: 'plugin.google.maps.BaseArrayClass',\n            repo: ''\n        }),\n        __metadata(\"design:paramtypes\", [Object])\n    ], BaseArrayClass);\n    return BaseArrayClass;\n}(BaseClass));\nexport { BaseArrayClass };\n/**\n * @hidden\n * https://github.com/mapsplugin/cordova-plugin-googlemaps-doc/blob/master/v2.0.0/class/Circle/README.md\n */\nvar Circle = (function (_super) {\n    __extends(Circle, _super);\n    function Circle(_map, _objectInstance) {\n        var _this = _super.call(this) || this;\n        _this._map = _map;\n        _this._objectInstance = _objectInstance;\n        return _this;\n    }\n    /**\n     * Return the ID of instance.\n     * @return {string}\n     */\n    Circle.prototype.getId = function () { return; };\n    /**\n     * Return the map instance.\n     * @return {GoogleMap}\n     */\n    Circle.prototype.getMap = function () { return this._map; };\n    /**\n     * Change the center position.\n     * @param latLng {ILatLng}\n     */\n    Circle.prototype.setCenter = function (latLng) { };\n    /**\n     * Return the current center position\n     * @return {ILatLng}\n     */\n    Circle.prototype.getCenter = function () { return; };\n    /**\n     * Return the current circle radius.\n     * @return {number}\n     */\n    Circle.prototype.getRadius = function () { return; };\n    /**\n     * Change the circle radius.\n     * @param radius {number}\n     */\n    Circle.prototype.setRadius = function (radius) { };\n    /**\n     * Change the filling color (inner color).\n     * @param color {string}\n     */\n    Circle.prototype.setFillColor = function (color) { };\n    /**\n     * Return the current circle filling color (inner color).\n     * @return {string}\n     */\n    Circle.prototype.getFillColor = function () { return; };\n    /**\n     * Change the stroke width.\n     * @param strokeWidth {number}\n     */\n    Circle.prototype.setStrokeWidth = function (strokeWidth) { };\n    /**\n     * Return the current circle stroke width (unit: pixel).\n     * @return {number}\n     */\n    Circle.prototype.getStrokeWidth = function () { return; };\n    /**\n     * Change the stroke color (outter color).\n     * @param strokeColor {string}\n     */\n    Circle.prototype.setStrokeColor = function (strokeColor) { };\n    /**\n     * Return the current circle stroke color (outer color).\n     * @return {string}\n     */\n    Circle.prototype.getStrokeColor = function () { return; };\n    /**\n     * Change clickablity of the circle.\n     * @param clickable {boolean}\n     */\n    Circle.prototype.setClickable = function (clickable) { };\n    /**\n     * Return true if the circle is clickable.\n     * @return {boolean}\n     */\n    Circle.prototype.getClickable = function () { return; };\n    /**\n     * Change the circle zIndex order.\n     * @param zIndex {number}\n     */\n    Circle.prototype.setZIndex = function (zIndex) { };\n    /**\n     * Return the current circle zIndex.\n     * @return {number}\n     */\n    Circle.prototype.getZIndex = function () { return; };\n    /**\n     * Remove the circle.\n     */\n    Circle.prototype.remove = function () { };\n    /**\n     * Return the latLngBounds (rectangle) that contains the circle.\n     * @return {LatLngBounds}\n     */\n    Circle.prototype.getBounds = function () { return; };\n    /**\n     * Set circle visibility\n     * @param visible {boolean}\n     */\n    Circle.prototype.setVisible = function (visible) { };\n    /**\n     * Returns a boolean that indicates whether the circle is visible\n     * @return {boolean}\n     */\n    Circle.prototype.getVisible = function () { return; };\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", String)\n    ], Circle.prototype, \"getId\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Object]),\n        __metadata(\"design:returntype\", void 0)\n    ], Circle.prototype, \"setCenter\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", Object)\n    ], Circle.prototype, \"getCenter\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", Number)\n    ], Circle.prototype, \"getRadius\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Number]),\n        __metadata(\"design:returntype\", void 0)\n    ], Circle.prototype, \"setRadius\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [String]),\n        __metadata(\"design:returntype\", void 0)\n    ], Circle.prototype, \"setFillColor\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", String)\n    ], Circle.prototype, \"getFillColor\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Number]),\n        __metadata(\"design:returntype\", void 0)\n    ], Circle.prototype, \"setStrokeWidth\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", Number)\n    ], Circle.prototype, \"getStrokeWidth\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [String]),\n        __metadata(\"design:returntype\", void 0)\n    ], Circle.prototype, \"setStrokeColor\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", String)\n    ], Circle.prototype, \"getStrokeColor\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Boolean]),\n        __metadata(\"design:returntype\", void 0)\n    ], Circle.prototype, \"setClickable\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", Boolean)\n    ], Circle.prototype, \"getClickable\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Number]),\n        __metadata(\"design:returntype\", void 0)\n    ], Circle.prototype, \"setZIndex\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", Number)\n    ], Circle.prototype, \"getZIndex\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], Circle.prototype, \"remove\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", LatLngBounds)\n    ], Circle.prototype, \"getBounds\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Boolean]),\n        __metadata(\"design:returntype\", void 0)\n    ], Circle.prototype, \"setVisible\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", Boolean)\n    ], Circle.prototype, \"getVisible\", null);\n    return Circle;\n}(BaseClass));\nexport { Circle };\n/**\n * @hidden\n */\nvar Environment = (function () {\n    function Environment() {\n    }\n    Environment_1 = Environment;\n    /**\n     * Get the open source software license information for Google Maps SDK for iOS.\n     * @return {Promise<any>}\n     */\n    Environment.getLicenseInfo = function () {\n        return new Promise(function (resolve) {\n            GoogleMaps.getPlugin().environment.getLicenseInfo(function (text) { return resolve(text); });\n        });\n    };\n    /**\n     * @deprecation\n     * @hidden\n     */\n    Environment.prototype.getLicenseInfo = function () {\n        console.error('GoogleMaps', '[deprecated] This method is static. Please use Environment.getLicenseInfo()');\n        return Environment_1.getLicenseInfo();\n    };\n    /**\n     * Specifies the background color of the app.\n     * @param color\n     */\n    Environment.setBackgroundColor = function (color) {\n        GoogleMaps.getPlugin().environment.setBackgroundColor(color);\n    };\n    /**\n     * @deprecation\n     * @hidden\n     */\n    Environment.prototype.setBackgroundColor = function (color) {\n        console.error('GoogleMaps', '[deprecated] This method is static. Please use Environment.setBackgroundColor()');\n        Environment_1.setBackgroundColor(color);\n    };\n    Environment = Environment_1 = __decorate([\n        Plugin({\n            plugin: 'cordova-plugin-googlemaps',\n            pluginName: 'GoogleMaps',\n            pluginRef: 'plugin.google.maps.environment',\n            repo: ''\n        })\n    ], Environment);\n    return Environment;\n    var Environment_1;\n}());\nexport { Environment };\n/**\n * @hidden\n */\nvar Geocoder = (function () {\n    function Geocoder() {\n    }\n    Geocoder_1 = Geocoder;\n    /**\n     * @deprecation\n     * @hidden\n     */\n    Geocoder.prototype.geocode = function (request) {\n        console.error('GoogleMaps', '[deprecated] This method is static. Please use Geocoder.geocode()');\n        return Geocoder_1.geocode(request);\n    };\n    /**\n     * Converts position to address and vice versa\n     * @param {GeocoderRequest} request Request object with either an address or a position\n     * @return {Promise<GeocoderResult[] | BaseArrayClass<GeocoderResult>>}\n     */\n    Geocoder.geocode = function (request) {\n        if (request.address instanceof Array || Array.isArray(request.address) ||\n            request.position instanceof Array || Array.isArray(request.position)) {\n            // -------------------------\n            // Geocoder.geocode({\n            //   address: [\n            //    \"Kyoto, Japan\",\n            //    \"Tokyo, Japan\"\n            //   ]\n            // })\n            // -------------------------\n            return new Promise(function (resolve, reject) {\n                GoogleMaps.getPlugin().Geocoder.geocode(request, function (mvcArray) {\n                    if (mvcArray) {\n                        resolve(new BaseArrayClass(mvcArray));\n                    }\n                    else {\n                        reject();\n                    }\n                });\n            });\n        }\n        else {\n            // -------------------------\n            // Geocoder.geocode({\n            //   address: \"Kyoto, Japan\"\n            // })\n            // -------------------------\n            return new Promise(function (resolve, reject) {\n                GoogleMaps.getPlugin().Geocoder.geocode(request, function (results) {\n                    if (results) {\n                        resolve(results);\n                    }\n                    else {\n                        reject();\n                    }\n                });\n            });\n        }\n    };\n    Geocoder = Geocoder_1 = __decorate([\n        Plugin({\n            pluginName: 'GoogleMaps',\n            pluginRef: 'plugin.google.maps.Geocoder',\n            plugin: 'cordova-plugin-googlemaps',\n            repo: ''\n        })\n    ], Geocoder);\n    return Geocoder;\n    var Geocoder_1;\n}());\nexport { Geocoder };\n/**\n * @hidden\n */\nvar Encoding = (function () {\n    function Encoding() {\n    }\n    Encoding_1 = Encoding;\n    /**\n     * @deprecation\n     * @hidden\n     */\n    Encoding.prototype.decodePath = function (encoded, precision) {\n        console.error('GoogleMaps', '[deprecated] This method is static. Please use Encoding.decodePath()');\n        return Encoding_1.decodePath(encoded, precision);\n    };\n    /**\n     * @deprecation\n     * @hidden\n     */\n    Encoding.prototype.encodePath = function (path) {\n        console.error('GoogleMaps', '[deprecated] This method is static. Please use Encoding.encodePath()');\n        return Encoding_1.encodePath(path);\n    };\n    /**\n     * Decodes an encoded path string into a sequence of LatLngs.\n     * @param encoded {string} an encoded path string\n     * @param precision? {number} default: 5\n     * @return {LatLng}\n     */\n    Encoding.decodePath = function (encoded, precision) { return; };\n    /**\n     * Encodes a sequence of LatLngs into an encoded path string.\n     * @param path {Array<ILatLng> | BaseArrayClass<ILatLng>} a sequence of LatLngs\n     * @return {string}\n     */\n    Encoding.encodePath = function (path) { return; };\n    Encoding = Encoding_1 = __decorate([\n        Plugin({\n            pluginName: 'GoogleMaps',\n            pluginRef: 'plugin.google.maps.geometry.encoding',\n            plugin: 'cordova-plugin-googlemaps',\n            repo: ''\n        })\n    ], Encoding);\n    return Encoding;\n    var Encoding_1;\n}());\nexport { Encoding };\n/**\n * @hidden\n */\nvar Poly = (function () {\n    function Poly() {\n    }\n    /**\n     * Returns true if the speicified location is in the polygon path\n     * @param location {ILatLng}\n     * @param path {ILatLng[]}\n     * @return {boolean}\n     */\n    Poly.containsLocation = function (location, path) {\n        return GoogleMaps.getPlugin().geometry.poly.containsLocation(location, path);\n    };\n    /**\n     * Returns true if the speicified location is on the polyline path\n     * @param location {ILatLng}\n     * @param path {ILatLng[]}\n     * @return {boolean}\n     */\n    Poly.isLocationOnEdge = function (location, path) {\n        return GoogleMaps.getPlugin().geometry.poly.isLocationOnEdge(location, path);\n    };\n    Poly = __decorate([\n        Plugin({\n            pluginName: 'GoogleMaps',\n            pluginRef: 'plugin.google.maps.geometry.poly',\n            plugin: 'cordova-plugin-googlemaps',\n            repo: ''\n        })\n    ], Poly);\n    return Poly;\n}());\nexport { Poly };\n/**\n * @hidden\n */\nvar Spherical = (function () {\n    function Spherical() {\n    }\n    Spherical_1 = Spherical;\n    /**\n     * @deprecation\n     * @hidden\n     */\n    Spherical.prototype.computeDistanceBetween = function (from, to) {\n        console.error('GoogleMaps', '[deprecated] This method is static. Please use Spherical.computeDistanceBetween()');\n        return Spherical_1.computeDistanceBetween(from, to);\n    };\n    /**\n     * @deprecation\n     * @hidden\n     */\n    Spherical.prototype.computeOffset = function (from, distance, heading) {\n        console.error('GoogleMaps', '[deprecated] This method is static. Please use Spherical.computeOffset()');\n        return Spherical_1.computeOffset(from, distance, heading);\n    };\n    /**\n     * @deprecation\n     * @hidden\n     */\n    Spherical.prototype.computeOffsetOrigin = function (to, distance, heading) {\n        console.error('GoogleMaps', '[deprecated] This method is static. Please use Spherical.computeOffsetOrigin()');\n        return Spherical_1.computeOffsetOrigin(to, distance, heading);\n    };\n    /**\n     * @deprecation\n     * @hidden\n     */\n    Spherical.prototype.computeLength = function (path) {\n        console.error('GoogleMaps', '[deprecated] This method is static. Please use Spherical.computeLength()');\n        return Spherical_1.computeLength(path);\n    };\n    /**\n     * @deprecation\n     * @hidden\n     */\n    Spherical.prototype.computeArea = function (path) {\n        console.error('GoogleMaps', '[deprecated] This method is static. Please use Spherical.computeArea()');\n        return Spherical_1.computeArea(path);\n    };\n    /**\n     * @deprecation\n     * @hidden\n     */\n    Spherical.prototype.computeSignedArea = function (path) {\n        console.error('GoogleMaps', '[deprecated] This method is static. Please use Spherical.computeSignedArea()');\n        return Spherical_1.computeSignedArea(path);\n    };\n    /**\n     * @deprecation\n     * @hidden\n     */\n    Spherical.prototype.computeHeading = function (from, to) {\n        console.error('GoogleMaps', '[deprecated] This method is static. Please use Spherical.computeHeading()');\n        return Spherical_1.computeHeading(from, to);\n    };\n    /**\n     * @deprecation\n     * @hidden\n     */\n    Spherical.prototype.interpolate = function (from, to, fraction) {\n        console.error('GoogleMaps', '[deprecated] This method is static. Please use Spherical.interpolate()');\n        return Spherical_1.interpolate(from, to, fraction);\n    };\n    /**\n     * Returns the distance, in meters, between two LatLngs.\n     * @param locationA {ILatLng}\n     * @param locationB {ILatLng}\n     * @return {number}\n     */\n    Spherical.computeDistanceBetween = function (from, to) {\n        return GoogleMaps.getPlugin().geometry.spherical.computeDistanceBetween(from, to);\n    };\n    /**\n     * Returns the LatLng resulting from moving a distance from an origin in the specified heading (expressed in degrees clockwise from north)\n     * @param from {ILatLng}\n     * @param distance {number}\n     * @param heading {number}\n     * @return {LatLng}\n     */\n    Spherical.computeOffset = function (from, distance, heading) {\n        return GoogleMaps.getPlugin().geometry.spherical.computeOffset(from, distance, heading);\n    };\n    /**\n     * Returns the location of origin when provided with a LatLng destination, meters travelled and original heading. Headings are expressed in degrees clockwise from North. This function returns null when no solution is available.\n     * @param to {ILatLng} The destination LatLng.\n     * @param distance {number} The distance travelled, in meters.\n     * @param heading {number} The heading in degrees clockwise from north.\n     * @return {LatLng}\n     */\n    Spherical.computeOffsetOrigin = function (to, distance, heading) {\n        return GoogleMaps.getPlugin().geometry.spherical.computeOffsetOrigin(to, distance, heading);\n    };\n    /**\n     * Returns the length of the given path.\n     * @param path {Array<ILatLng> | BaseArrayClass<ILatLng>}\n     * @return {number}\n     */\n    Spherical.computeLength = function (path) {\n        return GoogleMaps.getPlugin().geometry.spherical.computeLength(path);\n    };\n    /**\n     * Returns the area of a closed path. The computed area uses the same units as the radius.\n     * @param path {Array<ILatLng> | BaseArrayClass<ILatLng>}.\n     * @return {number}\n     */\n    Spherical.computeArea = function (path) {\n        return GoogleMaps.getPlugin().geometry.spherical.computeArea(path);\n    };\n    /**\n     * Returns the signed area of a closed path. The signed area may be used to determine the orientation of the path.\n     * @param path {Array<ILatLng> | BaseArrayClass<ILatLng>}.\n     * @return {number}\n     */\n    Spherical.computeSignedArea = function (path) {\n        return GoogleMaps.getPlugin().geometry.spherical.computeSignedArea(path);\n    };\n    /**\n     * Returns the heading from one LatLng to another LatLng. Headings are expressed in degrees clockwise from North within the range (-180,180).\n     * @param from {ILatLng}\n     * @param to {ILatLng}\n     * @return {number}\n     */\n    Spherical.computeHeading = function (from, to) {\n        return GoogleMaps.getPlugin().geometry.spherical.computeHeading(from, to);\n    };\n    /**\n     * Returns the LatLng which lies the given fraction of the way between the origin LatLng and the destination LatLng.\n     * @param from {ILatLng}     The LatLng from which to start.\n     * @param to {ILatLng}       The LatLng toward which to travel.\n     * @param fraction {number}  A fraction of the distance to travel from 0.0 to 1.0 .\n     * @return {LatLng}\n     */\n    Spherical.interpolate = function (from, to, fraction) {\n        return GoogleMaps.getPlugin().geometry.spherical.interpolate(from, to, fraction);\n    };\n    Spherical = Spherical_1 = __decorate([\n        Plugin({\n            pluginName: 'GoogleMaps',\n            pluginRef: 'plugin.google.maps.geometry.spherical',\n            plugin: 'cordova-plugin-googlemaps',\n            repo: ''\n        })\n    ], Spherical);\n    return Spherical;\n    var Spherical_1;\n}());\nexport { Spherical };\n/**\n * @hidden\n */\nvar GoogleMap = (function (_super) {\n    __extends(GoogleMap, _super);\n    function GoogleMap(element, options) {\n        var _this = _super.call(this) || this;\n        if (checkAvailability(GoogleMaps.getPluginRef(), null, GoogleMaps.getPluginName()) === true) {\n            if (element instanceof HTMLElement) {\n                _this._objectInstance = GoogleMaps.getPlugin().Map.getMap(element, options);\n            }\n            else if (typeof element === 'string') {\n                var dummyObj_1 = new (GoogleMaps.getPlugin().BaseClass)();\n                _this._objectInstance = dummyObj_1;\n                var onListeners_1 = [];\n                var oneListeners_1 = [];\n                var _origAddEventListener_1 = _this._objectInstance.addEventListener;\n                var _origAddEventListenerOnce_1 = _this._objectInstance.addEventListenerOnce;\n                _this._objectInstance.addEventListener = function (eventName, fn) {\n                    if (eventName === GoogleMapsEvent.MAP_READY) {\n                        _origAddEventListener_1.call(dummyObj_1, eventName, fn);\n                    }\n                    else {\n                        onListeners_1.push([dummyObj_1, fn]);\n                    }\n                };\n                _this._objectInstance.on = _this._objectInstance.addEventListener;\n                _this._objectInstance.addEventListenerOnce = function (eventName, fn) {\n                    if (eventName === GoogleMapsEvent.MAP_READY) {\n                        _origAddEventListenerOnce_1.call(dummyObj_1, eventName, fn);\n                    }\n                    else {\n                        oneListeners_1.push([dummyObj_1, fn]);\n                    }\n                };\n                _this._objectInstance.one = _this._objectInstance.addEventListenerOnce;\n                (new Promise(function (resolve, reject) {\n                    var count = 0;\n                    var timer = setInterval(function () {\n                        var target = document.querySelector('.show-page #' + element);\n                        if (target) {\n                            clearInterval(timer);\n                            resolve(target);\n                        }\n                        else {\n                            if (count++ < 20) {\n                                return;\n                            }\n                            clearInterval(timer);\n                            _this._objectInstance.remove();\n                            console.error('Can not find the element [#' + element + ']');\n                            reject();\n                        }\n                    }, 100);\n                }))\n                    .then(function (target) {\n                    _this._objectInstance = GoogleMaps.getPlugin().Map.getMap(target, options);\n                    _this._objectInstance.one(GoogleMapsEvent.MAP_READY, function () {\n                        _this.set('_overlays', {});\n                        onListeners_1.forEach(function (args) {\n                            _this.on.apply(_this, args);\n                        });\n                        oneListeners_1.forEach(function (args) {\n                            _this.one.apply(_this, args);\n                        });\n                        dummyObj_1.trigger(GoogleMapsEvent.MAP_READY);\n                    });\n                })\n                    .catch(function () {\n                    _this._objectInstance = null;\n                });\n            }\n            else if (element === null && options) {\n                _this._objectInstance = GoogleMaps.getPlugin().Map.getMap(null, options);\n            }\n        }\n        return _this;\n    }\n    /**\n     * Changes the map div\n     * @param domNode\n     */\n    GoogleMap.prototype.setDiv = function (domNode) {\n        if (typeof domNode === 'string') {\n            this._objectInstance.setDiv(document.querySelector('.show-page #' + domNode));\n        }\n        else {\n            this._objectInstance.setDiv(domNode);\n        }\n    };\n    /**\n     * Returns the map HTML element\n     * @return {HTMLElement}\n     */\n    GoogleMap.prototype.getDiv = function () { return; };\n    /**\n     * Changes the map type id\n     * @param mapTypeId {string}\n     */\n    GoogleMap.prototype.setMapTypeId = function (mapTypeId) { };\n    /**\n     * Moves the camera with animation\n     * @return {Promise<any>}\n     */\n    GoogleMap.prototype.animateCamera = function (cameraPosition) { return; };\n    /**\n     * Zooming in the camera with animation\n     * @return {Promise<any>}\n     */\n    GoogleMap.prototype.animateCameraZoomIn = function () { return; };\n    /**\n     * Zooming out the camera with animation\n     * @return {Promise<any>}\n     */\n    GoogleMap.prototype.animateCameraZoomOut = function () { return; };\n    /**\n     * Moves the camera without animation\n     * @return {Promise<any>}\n     */\n    GoogleMap.prototype.moveCamera = function (cameraPosition) { return; };\n    /**\n     * Zooming in the camera without animation\n     * @return {Promise<any>}\n     */\n    GoogleMap.prototype.moveCameraZoomIn = function () { return; };\n    /**\n     * Zooming out the camera without animation\n     * @return {Promise<any>}\n     */\n    GoogleMap.prototype.moveCameraZoomOut = function () { return; };\n    /**\n     * Get the position of the camera.\n     * @return {CameraPosition}\n     */\n    GoogleMap.prototype.getCameraPosition = function () { return; };\n    /**\n     * Get the current camera target position\n     * @return {Promise<CameraPosition>}\n     */\n    GoogleMap.prototype.getCameraTarget = function () { return; };\n    /**\n     * Get the current camera zoom level\n     * @return {number}\n     */\n    GoogleMap.prototype.getCameraZoom = function () { return; };\n    /**\n     * Get the current camera bearing\n     * @return {number}\n     */\n    GoogleMap.prototype.getCameraBearing = function () { return; };\n    /**\n     * Get the current camera tilt (view angle)\n     * @return {number}\n     */\n    GoogleMap.prototype.getCameraTilt = function () { return; };\n    /**\n     * Set the center position of the camera view\n     * @param latLng {ILatLng | Array<ILatLng>}\n     */\n    GoogleMap.prototype.setCameraTarget = function (latLng) { };\n    /**\n     * Set zoom level of the camera\n     * @param zoomLevel {number} Zoom level\n     */\n    GoogleMap.prototype.setCameraZoom = function (zoomLevel) { };\n    /**\n     * Set the camera view angle\n     * @param tiltLevel {number} Tilt level\n     */\n    GoogleMap.prototype.setCameraTilt = function (tiltLevel) { };\n    /**\n     * Set camera bearing\n     * @param bearing {any}\n     */\n    GoogleMap.prototype.setCameraBearing = function (bearing) { };\n    /**\n     * Change the center of the map by the given distance in pixels\n     * @param x {any}\n     * @param y {any}\n     */\n    GoogleMap.prototype.panBy = function (x, y) { };\n    /**\n     * Get the current visible region (southWest and northEast)\n     * @return {VisibleRegion}\n     */\n    GoogleMap.prototype.getVisibleRegion = function () { return; };\n    /**\n     * Get the current device location\n     * @return {Promise<MyLocation>}\n     */\n    GoogleMap.prototype.getMyLocation = function (options) { return; };\n    /**\n     * Set false to ignore all clicks on the map\n     * @param isClickable {boolean}\n     */\n    GoogleMap.prototype.setClickable = function (isClickable) { };\n    /**\n     * Destroy a map completely\n     * @return {Promise<any>}\n     */\n    GoogleMap.prototype.remove = function () {\n        var _this = this;\n        if (this.get('_overlays')) {\n            Object.keys(this.get('_overlays')).forEach(function (overlayId) {\n                _this.get('_overlays')[overlayId] = null;\n                delete _this.get('_overlays')[overlayId];\n            });\n        }\n        return new Promise(function (resolve) {\n            _this._objectInstance.remove(function () { return resolve(); });\n        });\n    };\n    /**\n     * Remove all overlays, such as marker\n     * @return {Promise<any>}\n     */\n    GoogleMap.prototype.clear = function () {\n        var _this = this;\n        if (this.get('_overlays')) {\n            Object.keys(this.get('_overlays')).forEach(function (overlayId) {\n                _this.get('_overlays')[overlayId] = null;\n                delete _this.get('_overlays')[overlayId];\n            });\n        }\n        return new Promise(function (resolve) {\n            _this._objectInstance.clear(function () { return resolve(); });\n        });\n    };\n    /**\n     * Convert the unit from LatLng to the pixels from the left/top of the map div\n     * @return {Promise<any>}\n     */\n    GoogleMap.prototype.fromLatLngToPoint = function (latLng) { return; };\n    /**\n     * Convert the unit from the pixels from the left/top to the LatLng\n     * @return {Promise<LatLng>}\n     */\n    GoogleMap.prototype.fromPointToLatLng = function (point) { return; };\n    /**\n     * Set true if you want to show the MyLocation button\n     * @param enabled {boolean}\n     */\n    GoogleMap.prototype.setMyLocationEnabled = function (enabled) { };\n    /**\n     * Get the currently focused building\n     * @return {Promise<any>}\n     */\n    GoogleMap.prototype.getFocusedBuilding = function () { return; };\n    /**\n     * Set true if you want to show the indoor map\n     * @param enabled {boolean}\n     */\n    GoogleMap.prototype.setIndoorEnabled = function (enabled) { };\n    /**\n     * Set true if you want to show the traffic layer\n     * @param enabled {boolean}\n     */\n    GoogleMap.prototype.setTrafficEnabled = function (enabled) { };\n    /**\n     * Set true if you want to show the compass button\n     * @param enabled {boolean}\n     */\n    GoogleMap.prototype.setCompassEnabled = function (enabled) { };\n    /**\n     * Sets the preference for whether all gestures should be enabled or disabled\n     * @param enabled {boolean}\n     */\n    GoogleMap.prototype.setAllGesturesEnabled = function (enabled) { };\n    /**\n     * Set visibility of the map\n     * @param visible {boolean}\n     */\n    GoogleMap.prototype.setVisible = function (visible) { };\n    /**\n     * Adjust the map padding (same as CSS padding rule)\n     * @param top {number}\n     * @param right {number}\n     * @param left {number}\n     * @param bottom {number}\n     */\n    GoogleMap.prototype.setPadding = function (top, right, bottom, left) { };\n    /**\n     * Set options\n     * @param options\n     */\n    GoogleMap.prototype.setOptions = function (options) { };\n    /**\n     * Adds a marker\n     * @return {Promise<Marker | any>}\n     */\n    GoogleMap.prototype.addMarker = function (options) {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            _this._objectInstance.addMarker(options, function (marker) {\n                if (marker) {\n                    var overlayId_1 = marker.getId();\n                    var overlay_1 = new Marker(_this, marker);\n                    _this.get('_overlays')[overlayId_1] = overlay_1;\n                    marker.one(overlayId_1 + '_remove', function () {\n                        if (_this.get('_overlays')) {\n                            _this.get('_overlays')[overlayId_1] = null;\n                            overlay_1.destroy();\n                        }\n                    });\n                    resolve(overlay_1);\n                }\n                else {\n                    reject();\n                }\n            });\n        });\n    };\n    GoogleMap.prototype.addMarkerCluster = function (options) {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            _this._objectInstance.addMarkerCluster(options, function (markerCluster) {\n                if (markerCluster) {\n                    var overlayId_2 = markerCluster.getId();\n                    var overlay_2 = new MarkerCluster(_this, markerCluster);\n                    _this.get('_overlays')[overlayId_2] = overlay_2;\n                    markerCluster.one('remove', function () {\n                        if (_this.get('_overlays')) {\n                            _this.get('_overlays')[overlayId_2] = null;\n                            overlay_2.destroy();\n                        }\n                    });\n                    markerCluster.set('_overlays', new BaseArrayClass());\n                    resolve(overlay_2);\n                }\n                else {\n                    reject();\n                }\n            });\n        });\n    };\n    /**\n     * Adds a circle\n     * @return {Promise<Circle | any>}\n     */\n    GoogleMap.prototype.addCircle = function (options) {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            _this._objectInstance.addCircle(options, function (circle) {\n                if (circle) {\n                    var overlayId_3 = circle.getId();\n                    var overlay_3 = new Circle(_this, circle);\n                    _this.get('_overlays')[overlayId_3] = overlay_3;\n                    circle.one(overlayId_3 + '_remove', function () {\n                        if (_this.get('_overlays')) {\n                            _this.get('_overlays')[overlayId_3] = null;\n                            overlay_3.destroy();\n                        }\n                    });\n                    resolve(overlay_3);\n                }\n                else {\n                    reject();\n                }\n            });\n        });\n    };\n    /**\n     * Adds a polygon\n     * @return {Promise<Polygon | any>}\n     */\n    GoogleMap.prototype.addPolygon = function (options) {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            _this._objectInstance.addPolygon(options, function (polygon) {\n                if (polygon) {\n                    var overlayId_4 = polygon.getId();\n                    var overlay_4 = new Polygon(_this, polygon);\n                    _this.get('_overlays')[overlayId_4] = overlay_4;\n                    polygon.one(overlayId_4 + '_remove', function () {\n                        if (_this.get('_overlays')) {\n                            _this.get('_overlays')[overlayId_4] = null;\n                            overlay_4.destroy();\n                        }\n                    });\n                    resolve(overlay_4);\n                }\n                else {\n                    reject();\n                }\n            });\n        });\n    };\n    /**\n     *\n     * @return {Promise<Polyline | any>}\n     */\n    GoogleMap.prototype.addPolyline = function (options) {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            _this._objectInstance.addPolyline(options, function (polyline) {\n                if (polyline) {\n                    var overlayId_5 = polyline.getId();\n                    var overlay_5 = new Polyline(_this, polyline);\n                    _this.get('_overlays')[overlayId_5] = overlay_5;\n                    polyline.one(overlayId_5 + '_remove', function () {\n                        if (_this.get('_overlays')) {\n                            _this.get('_overlays')[overlayId_5] = null;\n                            overlay_5.destroy();\n                        }\n                    });\n                    resolve(overlay_5);\n                }\n                else {\n                    reject();\n                }\n            });\n        });\n    };\n    /**\n     * @return {Promise<TileOverlay | any>}\n     */\n    GoogleMap.prototype.addTileOverlay = function (options) {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            _this._objectInstance.addTileOverlay(options, function (tileOverlay) {\n                if (tileOverlay) {\n                    var overlayId_6 = tileOverlay.getId();\n                    var overlay_6 = new TileOverlay(_this, tileOverlay);\n                    _this.get('_overlays')[overlayId_6] = overlay_6;\n                    tileOverlay.one(overlayId_6 + '_remove', function () {\n                        if (_this.get('_overlays')) {\n                            _this.get('_overlays')[overlayId_6] = null;\n                            overlay_6.destroy();\n                        }\n                    });\n                    resolve(overlay_6);\n                }\n                else {\n                    reject();\n                }\n            });\n        });\n    };\n    /**\n     * @return {Promise<GroundOverlay | any>}\n     */\n    GoogleMap.prototype.addGroundOverlay = function (options) {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            _this._objectInstance.addGroundOverlay(options, function (groundOverlay) {\n                if (groundOverlay) {\n                    var overlayId_7 = groundOverlay.getId();\n                    var overlay_7 = new GroundOverlay(_this, groundOverlay);\n                    _this.get('_overlays')[overlayId_7] = overlay_7;\n                    groundOverlay.one(overlayId_7 + '_remove', function () {\n                        if (_this.get('_overlays')) {\n                            _this.get('_overlays')[overlayId_7] = null;\n                            overlay_7.destroy();\n                        }\n                    });\n                    resolve(overlay_7);\n                }\n                else {\n                    reject();\n                }\n            });\n        });\n    };\n    /**\n     * Refreshes layout.\n     * You can execute it, but you don't need to do that. The plugin does this automatically.\n     */\n    GoogleMap.prototype.refreshLayout = function () { };\n    /**\n     * @return {Promise<any>}\n     */\n    GoogleMap.prototype.toDataURL = function () { return; };\n    __decorate([\n        InstanceCheck(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Object]),\n        __metadata(\"design:returntype\", void 0)\n    ], GoogleMap.prototype, \"setDiv\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", HTMLElement)\n    ], GoogleMap.prototype, \"getDiv\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [String]),\n        __metadata(\"design:returntype\", void 0)\n    ], GoogleMap.prototype, \"setMapTypeId\", null);\n    __decorate([\n        CordovaInstance(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Object]),\n        __metadata(\"design:returntype\", Promise)\n    ], GoogleMap.prototype, \"animateCamera\", null);\n    __decorate([\n        CordovaInstance(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", Promise)\n    ], GoogleMap.prototype, \"animateCameraZoomIn\", null);\n    __decorate([\n        CordovaInstance(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", Promise)\n    ], GoogleMap.prototype, \"animateCameraZoomOut\", null);\n    __decorate([\n        CordovaInstance(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Object]),\n        __metadata(\"design:returntype\", Promise)\n    ], GoogleMap.prototype, \"moveCamera\", null);\n    __decorate([\n        CordovaInstance(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", Promise)\n    ], GoogleMap.prototype, \"moveCameraZoomIn\", null);\n    __decorate([\n        CordovaInstance(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", Promise)\n    ], GoogleMap.prototype, \"moveCameraZoomOut\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", Object)\n    ], GoogleMap.prototype, \"getCameraPosition\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", Object)\n    ], GoogleMap.prototype, \"getCameraTarget\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", Number)\n    ], GoogleMap.prototype, \"getCameraZoom\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", Number)\n    ], GoogleMap.prototype, \"getCameraBearing\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", Number)\n    ], GoogleMap.prototype, \"getCameraTilt\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Object]),\n        __metadata(\"design:returntype\", void 0)\n    ], GoogleMap.prototype, \"setCameraTarget\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Number]),\n        __metadata(\"design:returntype\", void 0)\n    ], GoogleMap.prototype, \"setCameraZoom\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Number]),\n        __metadata(\"design:returntype\", void 0)\n    ], GoogleMap.prototype, \"setCameraTilt\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Object]),\n        __metadata(\"design:returntype\", void 0)\n    ], GoogleMap.prototype, \"setCameraBearing\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Object, Object]),\n        __metadata(\"design:returntype\", void 0)\n    ], GoogleMap.prototype, \"panBy\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", VisibleRegion)\n    ], GoogleMap.prototype, \"getVisibleRegion\", null);\n    __decorate([\n        CordovaInstance(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Object]),\n        __metadata(\"design:returntype\", Promise)\n    ], GoogleMap.prototype, \"getMyLocation\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Boolean]),\n        __metadata(\"design:returntype\", void 0)\n    ], GoogleMap.prototype, \"setClickable\", null);\n    __decorate([\n        CordovaInstance(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", Promise)\n    ], GoogleMap.prototype, \"remove\", null);\n    __decorate([\n        InstanceCheck(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", Promise)\n    ], GoogleMap.prototype, \"clear\", null);\n    __decorate([\n        CordovaInstance(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Object]),\n        __metadata(\"design:returntype\", Promise)\n    ], GoogleMap.prototype, \"fromLatLngToPoint\", null);\n    __decorate([\n        CordovaInstance(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Object]),\n        __metadata(\"design:returntype\", Promise)\n    ], GoogleMap.prototype, \"fromPointToLatLng\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Boolean]),\n        __metadata(\"design:returntype\", void 0)\n    ], GoogleMap.prototype, \"setMyLocationEnabled\", null);\n    __decorate([\n        CordovaInstance(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", Promise)\n    ], GoogleMap.prototype, \"getFocusedBuilding\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Boolean]),\n        __metadata(\"design:returntype\", void 0)\n    ], GoogleMap.prototype, \"setIndoorEnabled\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Boolean]),\n        __metadata(\"design:returntype\", void 0)\n    ], GoogleMap.prototype, \"setTrafficEnabled\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Boolean]),\n        __metadata(\"design:returntype\", void 0)\n    ], GoogleMap.prototype, \"setCompassEnabled\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Boolean]),\n        __metadata(\"design:returntype\", void 0)\n    ], GoogleMap.prototype, \"setAllGesturesEnabled\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Boolean]),\n        __metadata(\"design:returntype\", void 0)\n    ], GoogleMap.prototype, \"setVisible\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Number, Number, Number, Number]),\n        __metadata(\"design:returntype\", void 0)\n    ], GoogleMap.prototype, \"setPadding\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Object]),\n        __metadata(\"design:returntype\", void 0)\n    ], GoogleMap.prototype, \"setOptions\", null);\n    __decorate([\n        InstanceCheck(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Object]),\n        __metadata(\"design:returntype\", Promise)\n    ], GoogleMap.prototype, \"addMarker\", null);\n    __decorate([\n        InstanceCheck(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Object]),\n        __metadata(\"design:returntype\", Promise)\n    ], GoogleMap.prototype, \"addMarkerCluster\", null);\n    __decorate([\n        InstanceCheck(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Object]),\n        __metadata(\"design:returntype\", Promise)\n    ], GoogleMap.prototype, \"addCircle\", null);\n    __decorate([\n        InstanceCheck(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Object]),\n        __metadata(\"design:returntype\", Promise)\n    ], GoogleMap.prototype, \"addPolygon\", null);\n    __decorate([\n        InstanceCheck(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Object]),\n        __metadata(\"design:returntype\", Promise)\n    ], GoogleMap.prototype, \"addPolyline\", null);\n    __decorate([\n        InstanceCheck(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Object]),\n        __metadata(\"design:returntype\", Promise)\n    ], GoogleMap.prototype, \"addTileOverlay\", null);\n    __decorate([\n        InstanceCheck(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Object]),\n        __metadata(\"design:returntype\", Promise)\n    ], GoogleMap.prototype, \"addGroundOverlay\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], GoogleMap.prototype, \"refreshLayout\", null);\n    __decorate([\n        CordovaInstance(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", Promise)\n    ], GoogleMap.prototype, \"toDataURL\", null);\n    GoogleMap = __decorate([\n        Plugin({\n            pluginName: 'GoogleMaps',\n            plugin: 'cordova-plugin-googlemaps'\n        }),\n        __metadata(\"design:paramtypes\", [Object, Object])\n    ], GoogleMap);\n    return GoogleMap;\n}(BaseClass));\nexport { GoogleMap };\n/**\n * @hidden\n */\nvar GroundOverlay = (function (_super) {\n    __extends(GroundOverlay, _super);\n    function GroundOverlay(_map, _objectInstance) {\n        var _this = _super.call(this) || this;\n        _this._map = _map;\n        _this._objectInstance = _objectInstance;\n        return _this;\n    }\n    /**\n     * Return the ID of instance.\n     * @return {string}\n     */\n    GroundOverlay.prototype.getId = function () { return; };\n    /**\n     * Return the map instance.\n     * @return {GoogleMap}\n     */\n    GroundOverlay.prototype.getMap = function () { return this._map; };\n    /**\n     * Change the bounds of the GroundOverlay\n     * @param bounds { ILatLng[]}\n     */\n    GroundOverlay.prototype.setBounds = function (bounds) { };\n    /**\n     * Change the bearing of the ground overlay\n     * @param bearing {number}\n     */\n    GroundOverlay.prototype.setBearing = function (bearing) { };\n    /**\n     * Return the current bearing value\n     */\n    GroundOverlay.prototype.getBearing = function () { return; };\n    /**\n     * Change the image of the ground overlay\n     * @param image {string} URL of image\n     */\n    GroundOverlay.prototype.setImage = function (image) { };\n    ;\n    /**\n     * Change the opacity of the ground overlay from 0.0 to 1.0\n     * @param opacity {number}\n     */\n    GroundOverlay.prototype.setOpacity = function (opacity) { };\n    /**\n     * Return the current opacity\n     * @return {number}\n     */\n    GroundOverlay.prototype.getOpacity = function () { return; };\n    /**\n     * Change clickablity of the ground overlay\n     * @param clickable {boolean}\n     */\n    GroundOverlay.prototype.setClickable = function (clickable) { };\n    /**\n     * Return true if the ground overlay is clickable\n     * @return {boolean}\n     */\n    GroundOverlay.prototype.getClickable = function () { return; };\n    /**\n     * Change visibility of the ground overlay\n     * @param visible {boolean}\n     */\n    GroundOverlay.prototype.setVisible = function (visible) { };\n    /**\n     * Return true if the ground overlay is visible\n     * @return {boolean}\n     */\n    GroundOverlay.prototype.getVisible = function () { return; };\n    /**\n     * Change the ground overlay zIndex order\n     * @param index {number}\n     */\n    GroundOverlay.prototype.setZIndex = function (index) { };\n    /**\n     * Return the current ground overlay zIndex\n     * @return {number}\n     */\n    GroundOverlay.prototype.getZIndex = function () { return; };\n    /**\n     * Remove the ground overlay\n     */\n    GroundOverlay.prototype.remove = function () {\n        delete this._objectInstance.getMap().get('_overlays')[this.getId()];\n        this._objectInstance.remove();\n        this.destroy();\n    };\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", String)\n    ], GroundOverlay.prototype, \"getId\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Array]),\n        __metadata(\"design:returntype\", void 0)\n    ], GroundOverlay.prototype, \"setBounds\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Number]),\n        __metadata(\"design:returntype\", void 0)\n    ], GroundOverlay.prototype, \"setBearing\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", Number)\n    ], GroundOverlay.prototype, \"getBearing\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [String]),\n        __metadata(\"design:returntype\", void 0)\n    ], GroundOverlay.prototype, \"setImage\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Number]),\n        __metadata(\"design:returntype\", void 0)\n    ], GroundOverlay.prototype, \"setOpacity\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", Number)\n    ], GroundOverlay.prototype, \"getOpacity\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Boolean]),\n        __metadata(\"design:returntype\", void 0)\n    ], GroundOverlay.prototype, \"setClickable\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", Boolean)\n    ], GroundOverlay.prototype, \"getClickable\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Boolean]),\n        __metadata(\"design:returntype\", void 0)\n    ], GroundOverlay.prototype, \"setVisible\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", Boolean)\n    ], GroundOverlay.prototype, \"getVisible\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Number]),\n        __metadata(\"design:returntype\", void 0)\n    ], GroundOverlay.prototype, \"setZIndex\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", Number)\n    ], GroundOverlay.prototype, \"getZIndex\", null);\n    __decorate([\n        CordovaCheck(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], GroundOverlay.prototype, \"remove\", null);\n    return GroundOverlay;\n}(BaseClass));\nexport { GroundOverlay };\n/**\n * @hidden\n */\nvar HtmlInfoWindow = (function (_super) {\n    __extends(HtmlInfoWindow, _super);\n    function HtmlInfoWindow() {\n        var _this = _super.call(this) || this;\n        _this._objectInstance = new (GoogleMaps.getPlugin().HtmlInfoWindow)();\n        return _this;\n    }\n    /**\n     * Change the backgroundColor\n     * @param color {string}\n     */\n    HtmlInfoWindow.prototype.setBackgroundColor = function (color) { };\n    /**\n     * Set your HTML contents.\n     * @param content {any} String containing text or HTML element\n     * @param cssOptions? {any} CSS styles for the container element of HTMLInfoWindow\n     */\n    HtmlInfoWindow.prototype.setContent = function (content, cssOptions) { };\n    /**\n     * Open the htmlInfoWindow\n     * @param marker {Marker}\n     */\n    HtmlInfoWindow.prototype.open = function (marker) { };\n    /**\n     * Close the htmlInfoWindow\n     */\n    HtmlInfoWindow.prototype.close = function () { };\n    __decorate([\n        CordovaInstance(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [String]),\n        __metadata(\"design:returntype\", void 0)\n    ], HtmlInfoWindow.prototype, \"setBackgroundColor\", null);\n    __decorate([\n        CordovaInstance(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Object, Object]),\n        __metadata(\"design:returntype\", void 0)\n    ], HtmlInfoWindow.prototype, \"setContent\", null);\n    __decorate([\n        CordovaInstance(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Object]),\n        __metadata(\"design:returntype\", Object)\n    ], HtmlInfoWindow.prototype, \"open\", null);\n    __decorate([\n        CordovaInstance(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], HtmlInfoWindow.prototype, \"close\", null);\n    HtmlInfoWindow = __decorate([\n        Plugin({\n            plugin: 'cordova-plugin-googlemaps',\n            pluginName: 'GoogleMaps',\n            pluginRef: 'plugin.google.maps.HtmlInfoWindow',\n            repo: ''\n        }),\n        __metadata(\"design:paramtypes\", [])\n    ], HtmlInfoWindow);\n    return HtmlInfoWindow;\n}(BaseClass));\nexport { HtmlInfoWindow };\n/**\n * @hidden\n */\nvar Marker = (function (_super) {\n    __extends(Marker, _super);\n    function Marker(_map, _objectInstance) {\n        var _this = _super.call(this) || this;\n        _this._map = _map;\n        _this._objectInstance = _objectInstance;\n        return _this;\n    }\n    /**\n     * Return the ID of instance.\n     * @return {string}\n     */\n    Marker.prototype.getId = function () { return; };\n    /**\n     * Return the map instance.\n     * @return {GoogleMap}\n     */\n    Marker.prototype.getMap = function () { return this._map; };\n    /**\n     * Set the marker position.\n     * @param latLng {ILatLng}\n     */\n    Marker.prototype.setPosition = function (latLng) { return; };\n    /**\n     * Return the marker position.\n     * @return {ILatLng}\n     */\n    Marker.prototype.getPosition = function () { return; };\n    /**\n     * Show the normal infoWindow of the marker.\n     */\n    Marker.prototype.showInfoWindow = function () { };\n    /**\n     * Hide the normal infoWindow of the marker.\n     */\n    Marker.prototype.hideInfoWindow = function () { };\n    /**\n     * Specify the animation either `DROP` or `BOUNCE`\n     * @param animation {string}\n     */\n    Marker.prototype.setAnimation = function (animation) { };\n    /**\n     * Set true if you **do not want** to move the map when you click on the marker.\n     * @param disableAutoPan {boolean}\n     */\n    Marker.prototype.setDisableAutoPan = function (disableAutoPan) { };\n    /**\n     * Set false if you want to hide the marker.\n     * @param visible\n     */\n    Marker.prototype.setVisible = function (visible) { };\n    /**\n     * Return true if the marker is visible\n     */\n    Marker.prototype.isVisible = function () { return; };\n    /**\n     * Change title of the normal infoWindow.\n     * @param title {string}\n     */\n    Marker.prototype.setTitle = function (title) { };\n    /**\n     * Return the title strings.\n     * @return {string}\n     */\n    Marker.prototype.getTitle = function () { return; };\n    /**\n     * Change snippet of the normal infoWindow.\n     * @param snippet {string}\n     */\n    Marker.prototype.setSnippet = function (snippet) { };\n    /**\n     * Return the snippet strings.\n     * @return {string}\n     */\n    Marker.prototype.getSnippet = function () { return; };\n    /**\n     * Change the marker opacity from 0.0 to 1.0.\n     * @param alpha {number} Opacity\n     */\n    Marker.prototype.setOpacity = function (alpha) { };\n    /**\n     * Return the marker opacity.\n     * @return {number} Opacity\n     */\n    Marker.prototype.getOpacity = function () { return; };\n    /**\n     * Remove the marker.\n     */\n    Marker.prototype.remove = function () {\n        delete this._objectInstance.getMap().get('_overlays')[this.getId()];\n        this._objectInstance.remove();\n        this.destroy();\n    };\n    /**\n     * Change the info window anchor. This defaults to 50% from the left of the image and at the bottom of the image.\n     * @param x {number} Distance from left of the icon image in pixels.\n     * @param y {number} Distance from top of the icon image in pixels.\n     */\n    Marker.prototype.setIconAnchor = function (x, y) { };\n    /**\n     * Change the info window anchor. This defaults to 50% from the left of the image and at the top of the image.\n     * @param x {number} Distance from left of the icon image in pixels.\n     * @param y {number} Distance from top of the icon image in pixels.\n     */\n    Marker.prototype.setInfoWindowAnchor = function (x, y) { };\n    /**\n     * Return true if the infoWindow is shown on the marker\n     * @return {boolean}\n     */\n    Marker.prototype.isInfoWindowShown = function () { return; };\n    /**\n     * Return the marker hash code.\n     * @return {string} Marker hash code\n     */\n    Marker.prototype.getHashCode = function () { return; };\n    /**\n     * Higher zIndex value overlays will be drawn on top of lower zIndex value tile layers and overlays.\n     * @param y {number} z-index\n     */\n    Marker.prototype.setZIndex = function (zIndex) { };\n    /**\n     * Get z-index\n     * @return {number}\n     */\n    Marker.prototype.getZIndex = function () { return; };\n    /**\n     * Set true if you allow all users to drag the marker.\n     * @param draggable {boolean}\n     */\n    Marker.prototype.setDraggable = function (draggable) { };\n    /**\n     * Return true if the marker drag is enabled.\n     * @return {boolean}\n     */\n    Marker.prototype.isDraggable = function () { return; };\n    /**\n     * Set true if you want to be flat marker.\n     * @param flat {boolean}\n     */\n    Marker.prototype.setFlat = function (flat) { return; };\n    /**\n     * Change icon url and/or size\n     * @param icon\n     */\n    Marker.prototype.setIcon = function (icon) { return; };\n    /**\n     * Set the marker rotation angle.\n     * @param rotation {number}\n     */\n    Marker.prototype.setRotation = function (rotation) { };\n    /**\n     * Return the marker rotation angle.\n     * @return {number}\n     */\n    Marker.prototype.getRotation = function () { return; };\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", String)\n    ], Marker.prototype, \"getId\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Object]),\n        __metadata(\"design:returntype\", void 0)\n    ], Marker.prototype, \"setPosition\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", Object)\n    ], Marker.prototype, \"getPosition\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], Marker.prototype, \"showInfoWindow\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], Marker.prototype, \"hideInfoWindow\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [String]),\n        __metadata(\"design:returntype\", void 0)\n    ], Marker.prototype, \"setAnimation\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Boolean]),\n        __metadata(\"design:returntype\", void 0)\n    ], Marker.prototype, \"setDisableAutoPan\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Boolean]),\n        __metadata(\"design:returntype\", void 0)\n    ], Marker.prototype, \"setVisible\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", Boolean)\n    ], Marker.prototype, \"isVisible\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [String]),\n        __metadata(\"design:returntype\", void 0)\n    ], Marker.prototype, \"setTitle\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", String)\n    ], Marker.prototype, \"getTitle\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [String]),\n        __metadata(\"design:returntype\", void 0)\n    ], Marker.prototype, \"setSnippet\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", String)\n    ], Marker.prototype, \"getSnippet\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Number]),\n        __metadata(\"design:returntype\", void 0)\n    ], Marker.prototype, \"setOpacity\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", Number)\n    ], Marker.prototype, \"getOpacity\", null);\n    __decorate([\n        CordovaCheck(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], Marker.prototype, \"remove\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Number, Number]),\n        __metadata(\"design:returntype\", void 0)\n    ], Marker.prototype, \"setIconAnchor\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Number, Number]),\n        __metadata(\"design:returntype\", void 0)\n    ], Marker.prototype, \"setInfoWindowAnchor\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", Boolean)\n    ], Marker.prototype, \"isInfoWindowShown\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", String)\n    ], Marker.prototype, \"getHashCode\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Number]),\n        __metadata(\"design:returntype\", void 0)\n    ], Marker.prototype, \"setZIndex\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", Number)\n    ], Marker.prototype, \"getZIndex\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Boolean]),\n        __metadata(\"design:returntype\", void 0)\n    ], Marker.prototype, \"setDraggable\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", Boolean)\n    ], Marker.prototype, \"isDraggable\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Boolean]),\n        __metadata(\"design:returntype\", void 0)\n    ], Marker.prototype, \"setFlat\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Object]),\n        __metadata(\"design:returntype\", void 0)\n    ], Marker.prototype, \"setIcon\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Number]),\n        __metadata(\"design:returntype\", void 0)\n    ], Marker.prototype, \"setRotation\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", Number)\n    ], Marker.prototype, \"getRotation\", null);\n    return Marker;\n}(BaseClass));\nexport { Marker };\n/**\n * @hidden\n */\nvar MarkerCluster = (function (_super) {\n    __extends(MarkerCluster, _super);\n    function MarkerCluster(_map, _objectInstance) {\n        var _this = _super.call(this) || this;\n        _this._map = _map;\n        _this._objectInstance = _objectInstance;\n        return _this;\n    }\n    /**\n     * Return the ID of instance.\n     * @return {string}\n     */\n    MarkerCluster.prototype.getId = function () { return; };\n    MarkerCluster.prototype.addMarker = function (marker) { };\n    MarkerCluster.prototype.addMarkers = function (markers) { };\n    MarkerCluster.prototype.remove = function () {\n        this._objectInstance.set('_overlays', undefined);\n        delete this._objectInstance.getMap().get('_overlays')[this.getId()];\n        this._objectInstance.remove();\n        this.destroy();\n    };\n    /**\n     * Return the map instance.\n     * @return {GoogleMap}\n     */\n    MarkerCluster.prototype.getMap = function () { return this._map; };\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", String)\n    ], MarkerCluster.prototype, \"getId\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Object]),\n        __metadata(\"design:returntype\", void 0)\n    ], MarkerCluster.prototype, \"addMarker\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Array]),\n        __metadata(\"design:returntype\", void 0)\n    ], MarkerCluster.prototype, \"addMarkers\", null);\n    __decorate([\n        InstanceCheck(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], MarkerCluster.prototype, \"remove\", null);\n    return MarkerCluster;\n}(BaseClass));\nexport { MarkerCluster };\n/**\n * @hidden\n */\nvar Polygon = (function (_super) {\n    __extends(Polygon, _super);\n    function Polygon(_map, _objectInstance) {\n        var _this = _super.call(this) || this;\n        _this._map = _map;\n        _this._objectInstance = _objectInstance;\n        return _this;\n    }\n    /**\n     * Return the ID of instance.\n     * @return {string}\n     */\n    Polygon.prototype.getId = function () { return; };\n    /**\n     * Return the map instance.\n     * @return {GoogleMap}\n     */\n    Polygon.prototype.getMap = function () { return this._map; };\n    /**\n     * Change the polygon points.\n     * @param points {ILatLng[]}\n     */\n    Polygon.prototype.setPoints = function (points) { };\n    /**\n     * Return an instance of the BaseArrayClass.\n     * You can modify the points.\n     * @return {BaseArrayClass<ILatLng>}\n     */\n    Polygon.prototype.getPoints = function () {\n        return new BaseArrayClass(this._objectInstance.getPoints());\n    };\n    /**\n     * Change the polygon holes.\n     * @param holes {ILatLng[][]}\n     */\n    Polygon.prototype.setHoles = function (holes) { };\n    /**\n     * Return an instance of the BaseArrayClass.\n     * You can modify the holes.\n     * @return {BaseArrayClass<ILatLng[]>}\n     */\n    Polygon.prototype.getHoles = function () {\n        var holes = this._objectInstance.getPoints();\n        var results = new BaseArrayClass();\n        holes.forEach(function (hole) {\n            results.push(hole);\n        });\n        return results;\n    };\n    /**\n     * Change the filling color (inner color)\n     * @param fillColor {string}\n     */\n    Polygon.prototype.setFillColor = function (fillColor) { };\n    /**\n     * Return the current polygon filling color (inner color).\n     * @return {string}\n     */\n    Polygon.prototype.getFillColor = function () { return; };\n    /**\n     * Change the stroke color (outer color)\n     * @param strokeColor {string}\n     */\n    Polygon.prototype.setStrokeColor = function (strokeColor) { };\n    /**\n     * Return the current polygon stroke color (outer color)\n     * @return {string}\n     */\n    Polygon.prototype.getStrokeColor = function () { return; };\n    /**\n     * Change clickablity of the polygon\n     * @param clickable {boolean}\n     */\n    Polygon.prototype.setClickable = function (clickable) { };\n    /**\n     * Return true if the polygon is clickable\n     */\n    Polygon.prototype.getClickable = function () { return; };\n    /**\n     * Change visibility of the polygon\n     * @param visible {boolean}\n     */\n    Polygon.prototype.setVisible = function (visible) { };\n    /**\n     * Return true if the polygon is visible\n     * @return {boolean}\n     */\n    Polygon.prototype.getVisible = function () { return; };\n    /**\n     * Change the polygon zIndex order.\n     * @param zIndex {number}\n     */\n    Polygon.prototype.setZIndex = function (zIndex) { };\n    /**\n     * Return the current polygon zIndex\n     * @return {number}\n     */\n    Polygon.prototype.getZIndex = function () { return; };\n    /**\n     * Remove the polygon.\n     */\n    Polygon.prototype.remove = function () {\n        delete this._objectInstance.getMap().get('_overlays')[this.getId()];\n        this._objectInstance.remove();\n        this.destroy();\n    };\n    /**\n     * Change the polygon stroke width\n     */\n    Polygon.prototype.setStrokeWidth = function (strokeWidth) { };\n    /**\n     * Return the polygon stroke width\n     */\n    Polygon.prototype.getStrokeWidth = function () { return; };\n    /**\n     * When true, edges of the polygon are interpreted as geodesic and will follow the curvature of the Earth.\n     * @param geodesic {boolean}\n     */\n    Polygon.prototype.setGeodesic = function (geodesic) { };\n    /**\n     * Return true if the polygon is geodesic.\n     * @return {boolean}\n     */\n    Polygon.prototype.getGeodesic = function () { return; };\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", String)\n    ], Polygon.prototype, \"getId\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Array]),\n        __metadata(\"design:returntype\", void 0)\n    ], Polygon.prototype, \"setPoints\", null);\n    __decorate([\n        CordovaCheck(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", BaseArrayClass)\n    ], Polygon.prototype, \"getPoints\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Array]),\n        __metadata(\"design:returntype\", void 0)\n    ], Polygon.prototype, \"setHoles\", null);\n    __decorate([\n        CordovaCheck(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", BaseArrayClass)\n    ], Polygon.prototype, \"getHoles\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [String]),\n        __metadata(\"design:returntype\", void 0)\n    ], Polygon.prototype, \"setFillColor\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", String)\n    ], Polygon.prototype, \"getFillColor\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [String]),\n        __metadata(\"design:returntype\", void 0)\n    ], Polygon.prototype, \"setStrokeColor\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", String)\n    ], Polygon.prototype, \"getStrokeColor\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Boolean]),\n        __metadata(\"design:returntype\", void 0)\n    ], Polygon.prototype, \"setClickable\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", Boolean)\n    ], Polygon.prototype, \"getClickable\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Boolean]),\n        __metadata(\"design:returntype\", void 0)\n    ], Polygon.prototype, \"setVisible\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", Boolean)\n    ], Polygon.prototype, \"getVisible\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Number]),\n        __metadata(\"design:returntype\", void 0)\n    ], Polygon.prototype, \"setZIndex\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", Number)\n    ], Polygon.prototype, \"getZIndex\", null);\n    __decorate([\n        InstanceCheck(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], Polygon.prototype, \"remove\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Number]),\n        __metadata(\"design:returntype\", void 0)\n    ], Polygon.prototype, \"setStrokeWidth\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", Number)\n    ], Polygon.prototype, \"getStrokeWidth\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Boolean]),\n        __metadata(\"design:returntype\", void 0)\n    ], Polygon.prototype, \"setGeodesic\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", Boolean)\n    ], Polygon.prototype, \"getGeodesic\", null);\n    return Polygon;\n}(BaseClass));\nexport { Polygon };\n/**\n * @hidden\n */\nvar Polyline = (function (_super) {\n    __extends(Polyline, _super);\n    function Polyline(_map, _objectInstance) {\n        var _this = _super.call(this) || this;\n        _this._map = _map;\n        _this._objectInstance = _objectInstance;\n        return _this;\n    }\n    /**\n     * Return the ID of instance.\n     * @return {string}\n     */\n    Polyline.prototype.getId = function () { return; };\n    /**\n     * Return the map instance.\n     * @return {GoogleMap}\n     */\n    Polyline.prototype.getMap = function () { return this._map; };\n    /**\n     * Change the polyline points.\n     * @param points {ILatLng[]}\n     */\n    Polyline.prototype.setPoints = function (points) { };\n    /**\n     * Return an instance of the BaseArrayClass\n     * You can modify the points.\n     * @return {BaseArrayClass<ILatLng>}\n     */\n    Polyline.prototype.getPoints = function () {\n        return new BaseArrayClass(this._objectInstance.getPoints());\n    };\n    /**\n     * When true, edges of the polyline are interpreted as geodesic and will follow the curvature of the Earth.\n     * @param geoDesic {boolean}\n     */\n    Polyline.prototype.setGeoDesic = function (geoDesic) { };\n    /**\n     * Return true if the polyline is geodesic\n     */\n    Polyline.prototype.getGeodesic = function () { return; };\n    /**\n     * Change visibility of the polyline\n     * @param visible {boolean}\n     */\n    Polyline.prototype.setVisible = function (visible) { };\n    /**\n     * Return true if the polyline is visible\n     * @return {boolean}\n     */\n    Polyline.prototype.getVisible = function () { return; };\n    /**\n     * Change clickablity of the polyline\n     * @param clickable {boolean}\n     */\n    Polyline.prototype.setClickable = function (clickable) { };\n    /**\n     * Return true if the polyline is clickable\n     * @return {boolean}\n     */\n    Polyline.prototype.getClickable = function () { return; };\n    /**\n     * Change the polyline color\n     * @param strokeColor {string}\n     */\n    Polyline.prototype.setStrokeColor = function (strokeColor) { };\n    /**\n     * Return the current polyline color\n     * @return {string}\n     */\n    Polyline.prototype.getStrokeColor = function () { return; };\n    /**\n     * Change the polyline stroke width\n     * @param strokeWidth {number}\n     */\n    Polyline.prototype.setStrokeWidth = function (strokeWidth) { };\n    /**\n     * Return the current stroke width (unit: pixel).\n     * @return {number}\n     */\n    Polyline.prototype.getStrokeWidth = function () { return; };\n    /**\n     * Change the polyline zIndex order.\n     * @param index {number}\n     */\n    Polyline.prototype.setZIndex = function (index) { };\n    /**\n     * Return the current polyline zIndex\n     * @return {number}\n     */\n    Polyline.prototype.getZIndex = function () { return; };\n    /**\n     * Remove the polyline\n     */\n    Polyline.prototype.remove = function () {\n        delete this._objectInstance.getMap().get('_overlays')[this.getId()];\n        this._objectInstance.remove();\n        this.destroy();\n    };\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", String)\n    ], Polyline.prototype, \"getId\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Array]),\n        __metadata(\"design:returntype\", void 0)\n    ], Polyline.prototype, \"setPoints\", null);\n    __decorate([\n        CordovaCheck(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", BaseArrayClass)\n    ], Polyline.prototype, \"getPoints\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Boolean]),\n        __metadata(\"design:returntype\", void 0)\n    ], Polyline.prototype, \"setGeoDesic\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", Boolean)\n    ], Polyline.prototype, \"getGeodesic\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Boolean]),\n        __metadata(\"design:returntype\", void 0)\n    ], Polyline.prototype, \"setVisible\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", Boolean)\n    ], Polyline.prototype, \"getVisible\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Boolean]),\n        __metadata(\"design:returntype\", void 0)\n    ], Polyline.prototype, \"setClickable\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", Boolean)\n    ], Polyline.prototype, \"getClickable\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [String]),\n        __metadata(\"design:returntype\", void 0)\n    ], Polyline.prototype, \"setStrokeColor\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", String)\n    ], Polyline.prototype, \"getStrokeColor\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Number]),\n        __metadata(\"design:returntype\", void 0)\n    ], Polyline.prototype, \"setStrokeWidth\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", Number)\n    ], Polyline.prototype, \"getStrokeWidth\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Number]),\n        __metadata(\"design:returntype\", void 0)\n    ], Polyline.prototype, \"setZIndex\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", Number)\n    ], Polyline.prototype, \"getZIndex\", null);\n    __decorate([\n        InstanceCheck(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], Polyline.prototype, \"remove\", null);\n    return Polyline;\n}(BaseClass));\nexport { Polyline };\n/**\n * @hidden\n */\nvar TileOverlay = (function (_super) {\n    __extends(TileOverlay, _super);\n    function TileOverlay(_map, _objectInstance) {\n        var _this = _super.call(this) || this;\n        _this._map = _map;\n        _this._objectInstance = _objectInstance;\n        return _this;\n    }\n    /**\n     * Return the ID of instance.\n     * @return {string}\n     */\n    TileOverlay.prototype.getId = function () { return; };\n    /**\n     * Return the map instance.\n     * @return {GoogleMap}\n     */\n    TileOverlay.prototype.getMap = function () { return this._map; };\n    /**\n     * Set whether the tiles should fade in.\n     * @param fadeIn {boolean}\n     */\n    TileOverlay.prototype.setFadeIn = function (fadeIn) { };\n    /**\n     * Get whether the tiles should fade in\n     * @return {boolean}\n     */\n    TileOverlay.prototype.getFadeIn = function () { return; };\n    /**\n     * Set the zIndex of the tile overlay\n     * @param zIndex {number}\n     */\n    TileOverlay.prototype.setZIndex = function (zIndex) { };\n    /**\n     * Return the zIndex of the tile overlay\n     * @return {number}\n     */\n    TileOverlay.prototype.getZIndex = function () { return; };\n    /**\n     * Set the opacity of the tile overlay\n     * @param opacity {number}\n     */\n    TileOverlay.prototype.setOpacity = function (opacity) { };\n    /**\n     * Return the opacity of the tile overlay\n     * @return {number}\n     */\n    TileOverlay.prototype.getOpacity = function () { return; };\n    /**\n     * Set false if you want to hide\n     * @param visible {boolean}\n     */\n    TileOverlay.prototype.setVisible = function (visible) { };\n    /**\n     * Return true if the tile overlay is visible\n     * @return {boolean}\n     */\n    TileOverlay.prototype.getVisible = function () { return; };\n    /**\n     * Get tile size\n     */\n    TileOverlay.prototype.getTileSize = function () { return; };\n    /**\n     * Remove the tile overlay\n     */\n    TileOverlay.prototype.remove = function () {\n        delete this._objectInstance.getMap().get('_overlays')[this.getId()];\n        this._objectInstance.remove();\n        this.destroy();\n    };\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", String)\n    ], TileOverlay.prototype, \"getId\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Boolean]),\n        __metadata(\"design:returntype\", void 0)\n    ], TileOverlay.prototype, \"setFadeIn\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", Boolean)\n    ], TileOverlay.prototype, \"getFadeIn\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Number]),\n        __metadata(\"design:returntype\", void 0)\n    ], TileOverlay.prototype, \"setZIndex\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", Number)\n    ], TileOverlay.prototype, \"getZIndex\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Number]),\n        __metadata(\"design:returntype\", void 0)\n    ], TileOverlay.prototype, \"setOpacity\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", Number)\n    ], TileOverlay.prototype, \"getOpacity\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Boolean]),\n        __metadata(\"design:returntype\", void 0)\n    ], TileOverlay.prototype, \"setVisible\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", Boolean)\n    ], TileOverlay.prototype, \"getVisible\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", Object)\n    ], TileOverlay.prototype, \"getTileSize\", null);\n    __decorate([\n        CordovaCheck(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], TileOverlay.prototype, \"remove\", null);\n    return TileOverlay;\n}(BaseClass));\nexport { TileOverlay };\n//# sourceMappingURL=index.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@ionic-native/google-maps/index.js\n// module id = 271\n// module chunks = 0","import { Component, ViewChild, ElementRef } from '@angular/core';\r\nimport { IonicPage, NavController, NavParams } from 'ionic-angular';\r\nimport {\r\n  GoogleMaps,\r\n  GoogleMap,\r\n  GoogleMapsEvent,\r\n  GoogleMapOptions,\r\n  CameraPosition,\r\n  MarkerOptions,\r\n  Marker,\r\n  LatLng\r\n} from '@ionic-native/google-maps';\r\nimport { Establecimiento } from '../../models/establecimieto.interface';\r\nimport { Platform } from 'ionic-angular';\r\nimport { LoadingController } from 'ionic-angular';\r\nimport { AlertController } from 'ionic-angular';\r\nimport { ServicioBuscarProvider } from '../../providers/servicio-buscar/servicio-buscar';\r\n\r\ndeclare var google: any;\r\n\r\n@IonicPage({\r\n  segment: 'informacion-establecimiento/:idEstablecimiento'\r\n})\r\n@Component({\r\n  selector: 'page-informacion-establecimiento',\r\n  templateUrl: 'informacion-establecimiento.html',\r\n})\r\nexport class InformacionEstablecimientoPage {\r\n\r\n  @ViewChild('mapa') mapElement: ElementRef;\r\n  map: any;\r\n  est: any;\r\n  latLng: LatLng;\r\n  idEstablecimiento: any;\r\n  esMovil: boolean = false;\r\n  \r\n  constructor(public navCtrl: NavController, \r\n    public navParams: NavParams, \r\n    public googleMaps: GoogleMaps, \r\n    public platform: Platform,\r\n    public loadingCtrl: LoadingController,\r\n    public alertCtrl: AlertController,\r\n    public servicioBuscar: ServicioBuscarProvider) {\r\n    this.est = this.navParams.data;\r\n    this.esMovil = this.platform.is('ios') || this.platform.is('android');\r\n    this.idEstablecimiento = this.navParams.get('idEstablecimiento');\r\n  }\r\n\r\n  ionViewDidLoad() {\r\n    this.latLng = new LatLng(this.est.Latitud, this.est.Longitud);\r\n    if (this.esMovil) {\r\n      this.cargarMapaMovil();\r\n      this.moverCamara(this.latLng);\r\n    } else {\r\n      this.initMap();\r\n    }\r\n    this.añadirMarcador(this.latLng);\r\n  }\r\n\r\n  cargarEstablecimiento(id: number) {\r\n    let loader = this.loadingCtrl.create({\r\n      content: \"Cargando...\"\r\n    });\r\n    loader.present();\r\n    this.servicioBuscar.getEstablecimientoPorId(id).then((data) => {\r\n      if (data == null) {\r\n        this.mostrarMensajeError(\"No se pudo obtener el establecimiento, intertar mas tarde\");\r\n        loader.dismiss();\r\n        return;\r\n      }\r\n      this.est = data;\r\n      loader.dismiss();\r\n    }).catch(erro => {\r\n      console.error(\"Error al obtener un establecimiento\");\r\n    });\r\n  }\r\n\r\n  mostrarMensajeError(mensaje) {\r\n    let alert = this.alertCtrl.create({\r\n      title: 'Error',\r\n      subTitle: mensaje,\r\n      buttons: ['Aceptar']\r\n    });\r\n    alert.present();\r\n  }\r\n\r\n  moverCamara(latLng) {\r\n    this.map.moveCamera({\r\n      target: latLng\r\n    });\r\n  }\r\n\r\n  cargarMapaMovil() {\r\n    let mapOptions: GoogleMapOptions = {\r\n      camera: {\r\n        target: {\r\n          lat: this.est.Latitud,\r\n          lng: this.est.Longitud\r\n        },\r\n        zoom: 15,\r\n        tilt: 30\r\n      }\r\n    };\r\n    this.map = this.googleMaps.create('map', mapOptions);\r\n    this.map.one(GoogleMapsEvent.MAP_READY)\r\n      .then(() => {\r\n        this.moverCamara(this.latLng);\r\n        this.añadirMarcador(this.latLng);\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  añadirMarcador(latLng) {\r\n    if (this.esMovil) {\r\n      this.map.addMarker({\r\n        title: this.est.Nombre,\r\n        icon: 'blue',\r\n        animation: 'DROP',\r\n        position: latLng\r\n      });\r\n    } else {\r\n      var marker = new google.maps.Marker({\r\n        position: latLng,\r\n        map: this.map\r\n      });\r\n    }\r\n  }\r\n\r\n  initMap() {\r\n    let mapOptions = {\r\n      center: this.latLng,\r\n      zoom: 15,\r\n      mapTypeId: google.maps.MapTypeId.ROADMAP,\r\n      disableDefaultUI: true\r\n    };\r\n    this.map = new google.maps.Map(this.mapElement.nativeElement, mapOptions);\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/informacion-establecimiento/informacion-establecimiento.ts"],"sourceRoot":""}